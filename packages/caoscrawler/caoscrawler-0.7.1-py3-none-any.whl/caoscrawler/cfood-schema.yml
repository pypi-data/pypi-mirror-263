cfood:
  type: object
  additionalProperties:
    $ref:
      "#/$defs/converter"
  $defs:
    converter:
      properties:
        type:
          enum:
          - Directory
          - File
          - DictTextElement
          - TextElement
          - SimpleFile
          - YamlFileCaosDBRecord
          - MarkdownFile
          - DictListElement
          - ListElement
          - DictDictElement
          - DictElement
          - DictFloatElement
          - FloatElement
          - DictIntegerElement
          - IntegerElement
          - DictBooleanElement
          - BooleanElement
          - Definitions
          - Dict
          - Date
          - JSONFile
          - CSVTableConverter
          - XLSXTableConverter
          - H5File
          - H5Dataset
          - H5Group
          - H5Ndarray
          description: Type of this converter node.
        match:
          description: typically a regexp which is matched to a structure element name
          type: string
        match_name:
          description: a regexp that is matched to the key of a key-value pair
          type: string
        match_value:
          description: a regexp that is matched to the value of a key-value pair
          type: string
        records:
          description: This field is used to define new records or to modify records which have been defined on a higher level.
          type: object
          properties:
            parents:
              description: Parents for this record are given here as a list of names.
              type: array
              items:
                type: string
            additionalProperties:
              oneOf:
              - type: object
                properties:
                  value:
                    description: Dictionary notation for variable values. Values can be given by a variable which is indicated by an initial "$". Use "$$" for setting values actually starting with a dollar sign.
                    type: string
                  collection_mode:
                    description: The collection mode defines whether the resulting property will be a single property or whether the values of multiple structure elements will be collected either into a list or a multiproperty.
                    enum:
                    - single
                    - list
                    - multiproperty
                additionalProperties: false
              - type: string
                description: The short notation for values. Values can be given by a variable which is indicated by an initial "$". Use "$$" for setting values actually starting with a dollar sign. Multiproperties can be set using an initial "*" and list properties using an initial "+".
        subtree:
          type: object
          additionalProperties:
            $ref:
              "#/$defs/converter"
