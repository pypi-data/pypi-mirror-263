[tool.poetry]
name = "daml"
version = "0.44.5" # dynamic
description = "DAML provides a simple interface to characterize image data and its impact on model performance across classification and object-detection tasks"
license = "MIT"
readme = "README.md"
homepage = "https://daml.ai/"
repository = "https://github.com/aria-ml/daml/"
documentation = "https://daml.readthedocs.io/"

authors = [
  "Andrew Weng <andrew.weng@ariacoustics.com>",
  "James Gleeson <james.gleeson@ariacoustics.com>",
  "Scott Swan <scott.swan@ariacoustics.com>",
  "Shaun Jullens <shaun.jullens@ariacoustics.com>",
  "Thayer Fisher <thayer.fisher@ariacoustics.com>",
]
maintainers = [
  "ARiA <daml@ariacoustics.com>"
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Scientific/Engineering",
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
matplotlib = {version = "*", optional = true}
numpy = ">=1.24.2, <2"
nvidia-cudnn-cu11 = {version = ">=8.6.0.163", optional = true}
scipy = {version = ">=1.10" }
scikit-learn = {version = ">=1.2.1" }
tensorflow = [
  {version = "~2.13.1", python = "~3.8.1", optional = true},
  {version = ">=2.14.1,<2.16", python = ">=3.9,<3.12", optional = true},
]
tensorflow-io-gcs-filesystem = [
  {version = "~0.34.0", python = "~3.8.1", optional = true},
  {version = ">=0.35.0,<0.37", python = ">=3.9,<3.12", optional = true},
]
tensorflow_probability = [
  {version = "~0.21.0", python = "~3.8.1", optional = true},
  {version = ">=0.22.1,<0.24", python = ">=3.9,<3.12", optional = true},
]
torch = {version = ">=2.0.1, !=2.2.0", source = "pytorch", optional = true}

[tool.poetry.extras]
torch = ["torch", "matplotlib", "nvidia-cudnn-cu11"]
tensorflow = ["tensorflow", "tensorflow-io-gcs-filesystem", "tensorflow-probability", "nvidia-cudnn-cu11"]
all = ["torch", "matplotlib", "nvidia-cudnn-cu11", "tensorflow", "tensorflow-io-gcs-filesystem", "tensorflow-probability", "nvidia-cudnn-cu11"]

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
flake8 = "*"
flake8-pyproject = "*"
black = { extras = ["jupyter"], version = "*" }
isort = "*"
codespell = "*"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "*"
coverage = "*"
pyright = {version = "*, !=1.1.340"}
torchmetrics = {version = ">=1.0.0", source = "pytorch"}
matplotlib = {version = "*"}

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
ipykernel = {version = "6.26.0", python = ">=3.9,<3.12"}
ipywidgets = {version = "8.1.1", python = ">=3.9,<3.12"}
jupyter-client = {version = "8.6.0", python = ">=3.9,<3.12"}
jupyter-cache = {version = "*", python = ">=3.9,<3.12"}
myst-nb = {version = "1.0.0", python = ">=3.9,<3.12"} 
sphinx-rtd-size = {version = "0.2.0", python = ">=3.9,<3.12"}
sphinx-rtd-theme = {version = "1.3.0", python = ">=3.9,<3.12"}
sphinx-design = {version = "*", python = ">=3.9,<3.12"}
sphinx-tabs = {version = "*", python = ">=3.9,<3.12"}
Sphinx = {version = "7.2.6", python = ">=3.9,<3.12"}
tensorflow-datasets = {version = "*", python = ">=3.9,<3.12"}
torchvision = {version = ">=0.16.0", source = "pytorch", python = ">=3.9,<3.12"}
torchmetrics = {version = ">=1.0.0", source = "pytorch", python = ">=3.9,<3.12"}
matplotlib = {version = "*", python = ">=3.9,<3.12"}
pytest = {version = "*", python = ">=3.9,<3.12"}

[tool.poetry.group.jatic]
optional = true

[tool.poetry.group.jatic.dependencies]
maite = {version = "*"}

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
style = "semver"
pattern = "v(?P<base>\\d+\\.\\d+\\.\\d+)$"

[tool.poetry-dynamic-versioning.substitution]
files = ["src/daml/__init__.py"]

[tool.pyright]
reportMissingImports = false
exclude = ["src/daml/_alibi_detect"]

[tool.pytest.ini_options]
markers = [
  "interop: marks external library interop tests",
  "functional: marks slower functional tests",
]

[tool.black]
extend-exclude = '\.tox|.*env.*|docs|output|src/daml/_alibi_detect\/'

[tool.isort]
profile = 'black'
skip_glob = [
    ".tox",
    "*env*",
    "docs/*",
    "output/*"
    ]

[tool.flake8]
count = true
exclude = [
    ".tox",
    "*env*",
    "docs/*",
    "output/*",
    "src/daml/_alibi_detect/*"
    ]
max-line-length = 88

[tool.codespell]
skip = '*env*,docs/.jupyter_cache,CHANGELOG.md,poetry.lock,output'

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
