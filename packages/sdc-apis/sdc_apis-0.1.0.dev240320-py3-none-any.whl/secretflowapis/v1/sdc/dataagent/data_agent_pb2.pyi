"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2023 Ant Group Co., Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import secretflowapis.v1.common_pb2
import secretflowapis.v1.sdc.core_pb2
import secretflowapis.v1.sdc.digital_envelope_pb2
import secretflowapis.v1.status_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class RegisterInsPubKeyRequest(google.protobuf.message.Message):
    """机构注册自己的公钥"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    INS_ID_FIELD_NUMBER: builtins.int
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    ins_id: builtins.str
    """机构id,使用 SHA256 对公钥 DER 格式进行哈希，SHA256(DER(pk))"""
    @property
    def public_key(self) -> secretflowapis.v1.sdc.digital_envelope_pb2.PublicKey:
        """机构公钥"""
    signature: builtins.bytes
    """SIG(ins_id || public_key)"""
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        ins_id: builtins.str = ...,
        public_key: secretflowapis.v1.sdc.digital_envelope_pb2.PublicKey | None = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header", "public_key", b"public_key"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header", b"header", "ins_id", b"ins_id", "public_key", b"public_key", "signature", b"signature"]) -> None: ...

global___RegisterInsPubKeyRequest = RegisterInsPubKeyRequest

@typing_extensions.final
class RegisterInsPubKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___RegisterInsPubKeyResponse = RegisterInsPubKeyResponse

@typing_extensions.final
class GetRaCertPemsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    SECRET_SHARD_NUM_FIELD_NUMBER: builtins.int
    NONCES_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    secret_shard_num: builtins.int
    """数据分量个数：
      数据可能会使用秘密分享拆分成多个分量，每个分量都需要使用
    纯 TEE 模式为 1, TECC 模式为 2
    """
    @property
    def nonces(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """为防止重放攻击，由客户端提供的随机数"""
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        secret_shard_num: builtins.int = ...,
        nonces: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header", b"header", "nonces", b"nonces", "secret_shard_num", b"secret_shard_num"]) -> None: ...

global___GetRaCertPemsRequest = GetRaCertPemsRequest

@typing_extensions.final
class ReportWithCertPem(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SECRET_SHARD_ID_FIELD_NUMBER: builtins.int
    CERT_PEM_FIELD_NUMBER: builtins.int
    NONCE_FIELD_NUMBER: builtins.int
    AECS_TEE_SIGNATURE_FIELD_NUMBER: builtins.int
    AECS_TEE_PUBKEY_FIELD_NUMBER: builtins.int
    ATTESTATION_REPORT_FIELD_NUMBER: builtins.int
    secret_shard_id: builtins.int
    """分片 ID"""
    cert_pem: builtins.str
    """certificate, PEM format"""
    nonce: builtins.str
    """客户端提供的随机数"""
    aecs_tee_signature: builtins.str
    """AECS TEE提供的签名
    SIG(cert_pem || nonce)
    """
    aecs_tee_pubkey: builtins.str
    @property
    def attestation_report(self) -> secretflowapis.v1.sdc.core_pb2.UnifiedAttestationReport:
        """内部服务: quote.report_data = SHA256(aecs_tee_pubkey)
        开源tee device: quote.report_data = SHA256(cert_pem || nonce)
        """
    def __init__(
        self,
        *,
        secret_shard_id: builtins.int = ...,
        cert_pem: builtins.str = ...,
        nonce: builtins.str = ...,
        aecs_tee_signature: builtins.str = ...,
        aecs_tee_pubkey: builtins.str = ...,
        attestation_report: secretflowapis.v1.sdc.core_pb2.UnifiedAttestationReport | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["attestation_report", b"attestation_report"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["aecs_tee_pubkey", b"aecs_tee_pubkey", "aecs_tee_signature", b"aecs_tee_signature", "attestation_report", b"attestation_report", "cert_pem", b"cert_pem", "nonce", b"nonce", "secret_shard_id", b"secret_shard_id"]) -> None: ...

global___ReportWithCertPem = ReportWithCertPem

@typing_extensions.final
class GetRaCertPemsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    REPORT_WITH_CERTS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def report_with_certs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ReportWithCertPem]: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        report_with_certs: collections.abc.Iterable[global___ReportWithCertPem] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["report_with_certs", b"report_with_certs", "status", b"status"]) -> None: ...

global___GetRaCertPemsResponse = GetRaCertPemsResponse

@typing_extensions.final
class TeeNodeIndex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_ID_FIELD_NUMBER: builtins.int
    PARTY_ID_FIELD_NUMBER: builtins.int
    group_id: builtins.int
    """该节点在本次分布式任务中的组号"""
    party_id: builtins.int
    """该节点的角色A-0, B-1, C-2"""
    def __init__(
        self,
        *,
        group_id: builtins.int = ...,
        party_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_id", b"group_id", "party_id", b"party_id"]) -> None: ...

global___TeeNodeIndex = TeeNodeIndex

@typing_extensions.final
class CreateDataWithAuthRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_INFO_FIELD_NUMBER: builtins.int
    DATA_AUTH_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    OWNER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_info(self) -> secretflowapis.v1.sdc.core_pb2.DataMeta:
        """数据信息"""
    @property
    def data_auth(self) -> secretflowapis.v1.sdc.core_pb2.DataAuth:
        """数据授权信息"""
    algorithm: builtins.str
    """公钥和验签时使用的名字，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    owner_id: builtins.str
    """数据owner的id"""
    signature: builtins.bytes
    """数据 owner 签名
    SIG(data_info || data_auth)
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_info: secretflowapis.v1.sdc.core_pb2.DataMeta | None = ...,
        data_auth: secretflowapis.v1.sdc.core_pb2.DataAuth | None = ...,
        algorithm: builtins.str = ...,
        owner_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_auth", b"data_auth", "data_info", b"data_info", "header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_auth", b"data_auth", "data_info", b"data_info", "header", b"header", "owner_id", b"owner_id", "signature", b"signature"]) -> None: ...

global___CreateDataWithAuthRequest = CreateDataWithAuthRequest

@typing_extensions.final
class CreateDataWithAuthResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATA_ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    DATA_URI_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def data_access_token(self) -> secretflowapis.v1.sdc.core_pb2.DataAccessToken:
        """数据上传访问 Token"""
    @property
    def data_uri(self) -> secretflowapis.v1.sdc.core_pb2.DataUri:
        """数据上传路径"""
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        data_access_token: secretflowapis.v1.sdc.core_pb2.DataAccessToken | None = ...,
        data_uri: secretflowapis.v1.sdc.core_pb2.DataUri | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri", b"data_uri", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri", b"data_uri", "status", b"status"]) -> None: ...

global___CreateDataWithAuthResponse = CreateDataWithAuthResponse

@typing_extensions.final
class CreateDataInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_INFO_FIELD_NUMBER: builtins.int
    TEE_NODE_INDEX_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    OWNER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_info(self) -> secretflowapis.v1.sdc.core_pb2.DataMeta:
        """数据信息"""
    @property
    def tee_node_index(self) -> global___TeeNodeIndex:
        """仅Tecc的分布式节点需要填写
        机构和隐语对此字段不需要赋值
        """
    algorithm: builtins.str
    """公钥和验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    owner_id: builtins.str
    """数据owner的id"""
    signature: builtins.bytes
    """数据 owner 签名
    SIG(data_info)
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_info: secretflowapis.v1.sdc.core_pb2.DataMeta | None = ...,
        tee_node_index: global___TeeNodeIndex | None = ...,
        algorithm: builtins.str = ...,
        owner_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_info", b"data_info", "header", b"header", "tee_node_index", b"tee_node_index"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_info", b"data_info", "header", b"header", "owner_id", b"owner_id", "signature", b"signature", "tee_node_index", b"tee_node_index"]) -> None: ...

global___CreateDataInfoRequest = CreateDataInfoRequest

@typing_extensions.final
class CreateDataInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATA_ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    DATA_URI_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def data_access_token(self) -> secretflowapis.v1.sdc.core_pb2.DataAccessToken:
        """数据上传访问 Token"""
    @property
    def data_uri(self) -> secretflowapis.v1.sdc.core_pb2.DataUri:
        """数据上传路径"""
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        data_access_token: secretflowapis.v1.sdc.core_pb2.DataAccessToken | None = ...,
        data_uri: secretflowapis.v1.sdc.core_pb2.DataUri | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri", b"data_uri", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri", b"data_uri", "status", b"status"]) -> None: ...

global___CreateDataInfoResponse = CreateDataInfoResponse

@typing_extensions.final
class CreateDataAuthRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_AUTH_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    OWNER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_auth(self) -> secretflowapis.v1.sdc.core_pb2.DataAuth:
        """数据授权信息"""
    algorithm: builtins.str
    """公钥和验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    owner_id: builtins.str
    """数据owner的id"""
    signature: builtins.bytes
    """数据 owner 签名
    SIG(data_auth)
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_auth: secretflowapis.v1.sdc.core_pb2.DataAuth | None = ...,
        algorithm: builtins.str = ...,
        owner_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_auth", b"data_auth", "header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_auth", b"data_auth", "header", b"header", "owner_id", b"owner_id", "signature", b"signature"]) -> None: ...

global___CreateDataAuthRequest = CreateDataAuthRequest

@typing_extensions.final
class CreateDataAuthResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___CreateDataAuthResponse = CreateDataAuthResponse

@typing_extensions.final
class FinishDataUploadRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_URI_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    OWNER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_uri(self) -> secretflowapis.v1.sdc.core_pb2.DataUri:
        """数据上传路径以及上传状态"""
    algorithm: builtins.str
    """验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    owner_id: builtins.str
    """数据owner的id"""
    signature: builtins.bytes
    """数据 owner 签名
    SIG(data_uri)
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uri: secretflowapis.v1.sdc.core_pb2.DataUri | None = ...,
        algorithm: builtins.str = ...,
        owner_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_uri", b"data_uri", "header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_uri", b"data_uri", "header", b"header", "owner_id", b"owner_id", "signature", b"signature"]) -> None: ...

global___FinishDataUploadRequest = FinishDataUploadRequest

@typing_extensions.final
class FinishDataUploadResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___FinishDataUploadResponse = FinishDataUploadResponse

@typing_extensions.final
class DeleteDataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUIDS_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    OWNER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_uuids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    algorithm: builtins.str
    """验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    owner_id: builtins.str
    """数据owner的id"""
    signature: builtins.bytes
    """数据 owner 签名
    SIG(data_uuids)
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuids: collections.abc.Iterable[builtins.str] | None = ...,
        algorithm: builtins.str = ...,
        owner_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_uuids", b"data_uuids", "header", b"header", "owner_id", b"owner_id", "signature", b"signature"]) -> None: ...

global___DeleteDataRequest = DeleteDataRequest

@typing_extensions.final
class DeletePartitionDataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    PARTITION_ID_INFOS_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    OWNER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def partition_id_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PartitionIdInfo]: ...
    algorithm: builtins.str
    """验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    owner_id: builtins.str
    """数据owner的id"""
    signature: builtins.bytes
    """数据 owner 签名
    SIG(partition_id_infos)
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        partition_id_infos: collections.abc.Iterable[global___PartitionIdInfo] | None = ...,
        algorithm: builtins.str = ...,
        owner_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "header", b"header", "owner_id", b"owner_id", "partition_id_infos", b"partition_id_infos", "signature", b"signature"]) -> None: ...

global___DeletePartitionDataRequest = DeletePartitionDataRequest

@typing_extensions.final
class DeleteDataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___DeleteDataResponse = DeleteDataResponse

@typing_extensions.final
class CreateExportAuthRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    ALLOWED_INS_IDS_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    REQUESTER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    data_uuid: builtins.str
    @property
    def allowed_ins_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    algorithm: builtins.str
    """验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    requester_id: builtins.str
    """请求者的id"""
    signature: builtins.bytes
    """SIG(data_uuid || allowed_ins_ids)"""
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: builtins.str = ...,
        allowed_ins_ids: collections.abc.Iterable[builtins.str] | None = ...,
        algorithm: builtins.str = ...,
        requester_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "allowed_ins_ids", b"allowed_ins_ids", "data_uuid", b"data_uuid", "header", b"header", "requester_id", b"requester_id", "signature", b"signature"]) -> None: ...

global___CreateExportAuthRequest = CreateExportAuthRequest

@typing_extensions.final
class CreateExportAuthResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___CreateExportAuthResponse = CreateExportAuthResponse

@typing_extensions.final
class ExportDataRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    REQUESTER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    data_uuid: builtins.str
    """数据信息"""
    algorithm: builtins.str
    """验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    requester_id: builtins.str
    """请求者的id"""
    signature: builtins.bytes
    """SIG(requester_priv, data_uuid || requester_id)"""
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: builtins.str = ...,
        algorithm: builtins.str = ...,
        requester_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_uuid", b"data_uuid", "header", b"header", "requester_id", b"requester_id", "signature", b"signature"]) -> None: ...

global___ExportDataRequest = ExportDataRequest

@typing_extensions.final
class ExportPartitionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    PARTITION_ID_FIELD_NUMBER: builtins.int
    ALGORITHM_FIELD_NUMBER: builtins.int
    REQUESTER_ID_FIELD_NUMBER: builtins.int
    SIGNATURE_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    data_uuid: builtins.str
    """数据信息"""
    partition_id: builtins.str
    """分区 id"""
    algorithm: builtins.str
    """验签时使用的算法，示例如下：
    - SM3withSM2
    - SHA256withRSA
    - SHA512withRSA
    """
    requester_id: builtins.str
    """请求者的id"""
    signature: builtins.bytes
    """SIG(requester_priv, data_uuid || partition_id || requester_id)
    数字类型按照小端字节序进行字节拼接
    """
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: builtins.str = ...,
        partition_id: builtins.str = ...,
        algorithm: builtins.str = ...,
        requester_id: builtins.str = ...,
        signature: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["algorithm", b"algorithm", "data_uuid", b"data_uuid", "header", b"header", "partition_id", b"partition_id", "requester_id", b"requester_id", "signature", b"signature"]) -> None: ...

global___ExportPartitionRequest = ExportPartitionRequest

@typing_extensions.final
class ExportDataResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATA_ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    DATA_URI_WITH_DK_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def data_access_token(self) -> secretflowapis.v1.sdc.core_pb2.DataAccessToken:
        """数据下载访问 Token"""
    @property
    def data_uri_with_dk(self) -> secretflowapis.v1.sdc.core_pb2.DataUri:
        """数据下载路径以及数据解密密钥

        如果请求的是 `data_uuid` 下的所有数据(`DataExportRequest`)
        `data_uri_with_dk` 中会包含 `data_uuid`
        下所有分区/分段/分量数据的下载路径和解密密钥; 如果请求的是
        `data_uuid:partition_id` 下的数据(`PartDataExportRequest`)
        `data_uri_with_dk` 中仅包含 `data_uuid:partition_id`
        下所有分段/分量数据的下载路径和解密密钥.
        """
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        data_access_token: secretflowapis.v1.sdc.core_pb2.DataAccessToken | None = ...,
        data_uri_with_dk: secretflowapis.v1.sdc.core_pb2.DataUri | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri_with_dk", b"data_uri_with_dk", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri_with_dk", b"data_uri_with_dk", "status", b"status"]) -> None: ...

global___ExportDataResponse = ExportDataResponse

@typing_extensions.final
class GetInsPubKeyRequest(google.protobuf.message.Message):
    """以下是访问OB的接口"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    INS_ID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    ins_id: builtins.str
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        ins_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header", b"header", "ins_id", b"ins_id"]) -> None: ...

global___GetInsPubKeyRequest = GetInsPubKeyRequest

@typing_extensions.final
class GetInsPubKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def public_key(self) -> secretflowapis.v1.sdc.digital_envelope_pb2.PublicKey:
        """机构公钥"""
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        public_key: secretflowapis.v1.sdc.digital_envelope_pb2.PublicKey | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["public_key", b"public_key", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["public_key", b"public_key", "status", b"status"]) -> None: ...

global___GetInsPubKeyResponse = GetInsPubKeyResponse

@typing_extensions.final
class GetDataMetaRequest(google.protobuf.message.Message):
    """查询meta_data数据库表中的信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_uuid(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "header", b"header"]) -> None: ...

global___GetDataMetaRequest = GetDataMetaRequest

@typing_extensions.final
class GetDataMetaResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATA_META_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def data_meta(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[secretflowapis.v1.sdc.core_pb2.DataMeta]:
        """返回db中meta_data表的信息
        PartitionDataMeta等无用字段不填
        """
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        data_meta: collections.abc.Iterable[secretflowapis.v1.sdc.core_pb2.DataMeta] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_meta", b"data_meta", "status", b"status"]) -> None: ...

global___GetDataMetaResponse = GetDataMetaResponse

@typing_extensions.final
class GetDataAuthRequest(google.protobuf.message.Message):
    """查询data_auth_info数据库表中的信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_uuid(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "header", b"header"]) -> None: ...

global___GetDataAuthRequest = GetDataAuthRequest

@typing_extensions.final
class GetDataAuthResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATA_AUTH_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def data_auth(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[secretflowapis.v1.sdc.core_pb2.DataAuth]: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        data_auth: collections.abc.Iterable[secretflowapis.v1.sdc.core_pb2.DataAuth] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_auth", b"data_auth", "status", b"status"]) -> None: ...

global___GetDataAuthResponse = GetDataAuthResponse

@typing_extensions.final
class GetExportAuthRequest(google.protobuf.message.Message):
    """查询export_auth_info数据库表中的信息"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ExportAuthIdInfo(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DATA_UUID_FIELD_NUMBER: builtins.int
        GRANTER_INS_ID_FIELD_NUMBER: builtins.int
        data_uuid: builtins.str
        granter_ins_id: builtins.str
        def __init__(
            self,
            *,
            data_uuid: builtins.str = ...,
            granter_ins_id: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "granter_ins_id", b"granter_ins_id"]) -> None: ...

    HEADER_FIELD_NUMBER: builtins.int
    EXPORT_AUTH_ID_INFOS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def export_auth_id_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GetExportAuthRequest.ExportAuthIdInfo]: ...
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        export_auth_id_infos: collections.abc.Iterable[global___GetExportAuthRequest.ExportAuthIdInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["export_auth_id_infos", b"export_auth_id_infos", "header", b"header"]) -> None: ...

global___GetExportAuthRequest = GetExportAuthRequest

@typing_extensions.final
class GetExportAuthResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    EXPORT_AUTHS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def export_auths(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[secretflowapis.v1.sdc.core_pb2.ExportAuth]: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        export_auths: collections.abc.Iterable[secretflowapis.v1.sdc.core_pb2.ExportAuth] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["export_auths", b"export_auths", "status", b"status"]) -> None: ...

global___GetExportAuthResponse = GetExportAuthResponse

@typing_extensions.final
class GetDataAccessInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUIDS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def data_uuids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuids: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuids", b"data_uuids", "header", b"header"]) -> None: ...

global___GetDataAccessInfoRequest = GetDataAccessInfoRequest

@typing_extensions.final
class PartitionIdInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_UUID_FIELD_NUMBER: builtins.int
    PARTITION_ID_FIELD_NUMBER: builtins.int
    PARTITION_EXPR_FIELD_NUMBER: builtins.int
    data_uuid: builtins.str
    partition_id: builtins.str
    """分区 Id，当 `parition_expr` 为空时有效"""
    partition_expr: builtins.str
    """分区表达式

    1. 读取当前最新分区： maxpt
    2. 读取某个分区：分区格式为 ${yyyymmdd}，时区为 UTC+0, 如 20230404
    3. 读取一个范围的分区：（${yyyymmdd},${yyyymmdd}), 为闭区间，
         如 (20230304,20230404) 表示从 20230304（包含） 到 20230404（包含） 的所有分区
    4. 2 和 3 可以组合以冒号隔开，如 (20230304,20230404);20230201 
         表示从 20230304（包含） 到 20230404（包含）的所有分区以及 20230201 分区
    """
    def __init__(
        self,
        *,
        data_uuid: builtins.str = ...,
        partition_id: builtins.str = ...,
        partition_expr: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "partition_expr", b"partition_expr", "partition_id", b"partition_id"]) -> None: ...

global___PartitionIdInfo = PartitionIdInfo

@typing_extensions.final
class SegmentIdsInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DATA_UUID_FIELD_NUMBER: builtins.int
    PARTITION_ID_FIELD_NUMBER: builtins.int
    SEGMENT_IDS_FIELD_NUMBER: builtins.int
    data_uuid: builtins.str
    partition_id: builtins.str
    @property
    def segment_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        data_uuid: builtins.str = ...,
        partition_id: builtins.str = ...,
        segment_ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "partition_id", b"partition_id", "segment_ids", b"segment_ids"]) -> None: ...

global___SegmentIdsInfo = SegmentIdsInfo

@typing_extensions.final
class GetPartitionAccessInfoRequest(google.protobuf.message.Message):
    """查询多个partition下oss token和数据uri，以及用KEK_PUB加密的data_key
    由DataAuth查询
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    PARTITION_ID_INFOS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def partition_id_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PartitionIdInfo]: ...
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        partition_id_infos: collections.abc.Iterable[global___PartitionIdInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header", b"header", "partition_id_infos", b"partition_id_infos"]) -> None: ...

global___GetPartitionAccessInfoRequest = GetPartitionAccessInfoRequest

@typing_extensions.final
class GetDataAccessInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    DATA_ACCESS_TOKEN_FIELD_NUMBER: builtins.int
    DATA_URI_WITH_DK_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def data_access_token(self) -> secretflowapis.v1.sdc.core_pb2.DataAccessToken:
        """数据下载访问 Token"""
    @property
    def data_uri_with_dk(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[secretflowapis.v1.sdc.core_pb2.DataUri]:
        """数据下载路径以及数据解密密钥

        如果请求的是 `data_uuid` 下的所有数据(`GetDataAccessInfoRequest`)
        `data_uri_with_dk` 中会包含 `data_uuid`
        下所有分区/分段/分量数据的下载路径和解密密钥; 如果请求的是
        `data_uuid:partition_id` 下的数据(`GetPartitionAccessInfoRequest`)
        `data_uri_with_dk` 中仅包含 `data_uuid:partition_id`
        下所有分段/分量数据的下载路径和解密密钥.
        """
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        data_access_token: secretflowapis.v1.sdc.core_pb2.DataAccessToken | None = ...,
        data_uri_with_dk: collections.abc.Iterable[secretflowapis.v1.sdc.core_pb2.DataUri] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_access_token", b"data_access_token", "data_uri_with_dk", b"data_uri_with_dk", "status", b"status"]) -> None: ...

global___GetDataAccessInfoResponse = GetDataAccessInfoResponse

@typing_extensions.final
class CreateDataMacKeyRequest(google.protobuf.message.Message):
    """TEE worker存储计算结果时需要生成mac key并写入db"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    ENCRYPTION_ALGORITHM_FIELD_NUMBER: builtins.int
    ENCRYPTED_MAC_KEY_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    data_uuid: builtins.str
    encryption_algorithm: builtins.str
    """KEK_PUB_A加密Mac Key的算法"""
    encrypted_mac_key: builtins.str
    """KEK_PUB_A加密的mac_key,BASE64编码"""
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: builtins.str = ...,
        encryption_algorithm: builtins.str = ...,
        encrypted_mac_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "encrypted_mac_key", b"encrypted_mac_key", "encryption_algorithm", b"encryption_algorithm", "header", b"header"]) -> None: ...

global___CreateDataMacKeyRequest = CreateDataMacKeyRequest

@typing_extensions.final
class CreateDataMacKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___CreateDataMacKeyResponse = CreateDataMacKeyResponse

@typing_extensions.final
class GetDataMacKeyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    DATA_UUID_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    data_uuid: builtins.str
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        data_uuid: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_uuid", b"data_uuid", "header", b"header"]) -> None: ...

global___GetDataMacKeyRequest = GetDataMacKeyRequest

@typing_extensions.final
class GetDataMacKeyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    ENCRYPTION_ALGORITHM_FIELD_NUMBER: builtins.int
    ENCRYPTED_MAC_KEY_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    encryption_algorithm: builtins.str
    """KEK_PUB_A加密Mac Key的算法"""
    encrypted_mac_key: builtins.str
    """KEK_PUB_A加密的mac_key,BASE64编码"""
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        encryption_algorithm: builtins.str = ...,
        encrypted_mac_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["encrypted_mac_key", b"encrypted_mac_key", "encryption_algorithm", b"encryption_algorithm", "status", b"status"]) -> None: ...

global___GetDataMacKeyResponse = GetDataMacKeyResponse

@typing_extensions.final
class GetSegmentIdsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    PARTITION_ID_INFOS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> secretflowapis.v1.common_pb2.RequestHeader: ...
    @property
    def partition_id_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PartitionIdInfo]: ...
    def __init__(
        self,
        *,
        header: secretflowapis.v1.common_pb2.RequestHeader | None = ...,
        partition_id_infos: collections.abc.Iterable[global___PartitionIdInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["header", b"header", "partition_id_infos", b"partition_id_infos"]) -> None: ...

global___GetSegmentIdsRequest = GetSegmentIdsRequest

@typing_extensions.final
class GetSegmentIdsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STATUS_FIELD_NUMBER: builtins.int
    SEGMENT_IDS_INFOS_FIELD_NUMBER: builtins.int
    @property
    def status(self) -> secretflowapis.v1.status_pb2.Status: ...
    @property
    def segment_ids_infos(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SegmentIdsInfo]: ...
    def __init__(
        self,
        *,
        status: secretflowapis.v1.status_pb2.Status | None = ...,
        segment_ids_infos: collections.abc.Iterable[global___SegmentIdsInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["segment_ids_infos", b"segment_ids_infos", "status", b"status"]) -> None: ...

global___GetSegmentIdsResponse = GetSegmentIdsResponse
