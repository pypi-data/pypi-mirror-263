Metadata-Version: 2.3
Name: rust_requests
Version: 0.1.0b1
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Dist: mkdocs ==1.4.2 ; extra == 'docs'
Requires-Dist: mkdocs-material ==9.0.14 ; extra == 'docs'
Requires-Dist: mike ==1.1.2 ; extra == 'docs'
Requires-Dist: pillow ==9.4.0 ; extra == 'docs'
Requires-Dist: cairosvg ==2.6.0 ; extra == 'docs'
Requires-Dist: pytest ==7.2.1 ; extra == 'test'
Requires-Dist: pytest-asyncio ==0.20.3 ; extra == 'test'
Requires-Dist: aiohttp ==3.8.4 ; extra == 'benchmark'
Requires-Dist: httpx ==0.23.3 ; extra == 'benchmark'
Requires-Dist: pytest-benchmark ==4.0.0 ; extra == 'benchmark'
Provides-Extra: docs
Provides-Extra: test
Provides-Extra: benchmark
Requires-Python: >=3.8
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM

# rust_requests
rust_requests is a blazing fast async/await HTTP client for Python written on Rust using reqwests.

* [Works 15% faster than `aiohttp` on average](./benchmarks)
* RAII approach without context managers
* Memory-efficient lazy JSON parser
* Fully-typed even being written on Rust

***

## Overview
```python title="Example"
import asyncio
import datetime

import rust_requests


async def main():
    client = rust_requests.Client(
        user_agent="rust_requests/1.0",
        headers={"X-Foo": "bar"},
        store_cookie=True
    )
    request = rust_requests.Request(
        "GET", "https://google.com/search",
        ),
        query={"q": "hi"},
        headers={"X-Bar": "foo"},
        timeout=datetime.timedelta(seconds=30),
    )
    response = await client.send(request)
    print(response.status)
    data = await response.json()
    data.show()


asyncio.run(main())
```
```

## Installlation
Currently the library is not published to PyPI, so the only way to install it is from GitHub:
```bash
python -m pip install -U https://github.com/cop-discord/rust_requests/archive/main.zip
```

