[tool.poetry]
name = "peak-sdk"
version = "1.5.0"
packages = [{ include = "peak" }]
description = "Python SDK for interacting with the Peak platform"
authors = ["Peak <support@peak.ai>"]
license = "Apache License 2.0"
readme = "pypi-home.md"
homepage = "https://docs.peak.ai/sdk"
documentation = "https://docs.peak.ai/sdk/"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Natural Language :: English",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
  "Typing :: Typed"
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
requests = "^2.30"
requests-toolbelt = "^1.0"
pathspec = "^0.11"
typer = { version = "^0.9", extras = ['all'] }
jinja2 = "^3.1"
pyyaml = "^6.0"
certifi = ">=2023.7.22"
shellingham = "<1.5.2"
urllib3 = "<2"
structlog = "^24.1.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.3"
pytest-sugar = "^0.9"
pytest-icdiff = "^0.6"
Pygments = "^2.15"
types-Pygments = "^2.15"
types-colorama = "^0.4"
types-setuptools = "^67.7"
types-urllib3 = "^1.26"
types-requests = "^2.30"
types-pyyaml = "^6.0.12.9"
types-cffi = "^1.15"
types-decorator = "^5.1"
types-jsonschema = "^4.17"
types-paramiko = "^3.0"
types-psutil = "^5.9"
types-python-dateutil = "^2.8"
types-pywin32 = "^306.0"
types-six = "^1.16"
types-typed-ast = "^1.5"
xdoctest = { extras = ["colors"], version = "^1.1" }
coverage = { extras = ["toml"], version = "^7.2" }

[tool.poetry.group.dev.dependencies]
black = { extras = ["jupyter"], version = ">=23.3.0" }
furo = ">=2023.3.27"
mypy = ">=1.2.0"
pre-commit = ">=3.3.1"
pre-commit-hooks = ">=4.4.0"
ochrona = ">=2.0.2"
darglint = ">=1.8.1"
sphinx = ">=7.1.2"
sphinx-autobuild = ">=2021.3.14"
myst-parser = { version = ">=2.0.0" }
markdown-it-py = ">=2.2.0"
shellcheck-py = ">=0.9.0.2"
nox = ">=2023.4.22"
nox-poetry = ">=1.0.2"
blacken-docs = ">=1.13.0"
click = ">=8.1.3"
jupyter = ">=1.0.0"
notebook = ">=7.0.2"
nbstripout = ">=0.6.1"
nbqa = ">=1.7.0"
jupyter_client = ">=8.2.0"
ruff = ">=0.0.265"
tryceratops = ">=2.0.0"
nbsphinx = ">=0.9.1"
nbsphinx_link = ">=1.3.0"
pandoc = ">=2.3"
graphviz = ">=0.20.1"
detect-secrets = "^1.4.0"
sphinx-copybutton = "^0.5.2"
sphinx-multiversion = "^0.2.4"
sphinx-rtd-theme = "^2.0.0"

[tool.coverage.paths]
source = ["peak", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["peak", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.black]
line-length = 120

[tool.ruff]
respect-gitignore = true
src = ["peak", "tests"]
select = ["ALL"]
ignore = [
  "UP006",
  "UP035",
  "UP007",
  "UP037",
  "E501",
  "D401",
  "ANN101",
  "ANN401",
  "PLR0913",
  "TCH",
  "N818",
  "D301"
]
unfixable = [
  "T10",
  "T20",
  "B",
  "SIM",
  "RUF",
  "C90",
  "C4",
  "N",
  "ANN",
  "PIE",
  "PLE",
  "PLC",
  "PLR",
  "PLW",
  "UP"
]
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
# Ignore all errors in the tests directory.
"tests/*" = ["S", "INP001", "ANN001", "PTH123", "PTH103", "ERA001"]
".github/workflows/files_cache_key.py" = ["S", "INP001"]
"noxfile.py" = ["S", "INP001"]
"docs/conf.py" = ["S", "INP001", "A001"]
"docs/examples/*" = ["ERA001"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.pydocstyle]
# Accepts: "google", "numpy", or "pep257".
convention = "google"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.nbqa.addopts]
ruff = ["--ignore=D,T,TRY,E402"]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
follow_imports = "normal"
exclude = ['./stubs']
# Know exactly what you're doing
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
show_absolute_path = true
# Ensure Full Coverage
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
# Restrict dynamic typing
disallow_any_decorated = false
disallow_any_generics = true
disallow_subclassing_any = true
warn_return_any = true
# Explicit is better than implicit
strict_equality = true
strict_optional = true
no_implicit_optional = true

# It's hard to make tests compliant using unittest.mock
[[tool.mypy.overrides]]
module = 'tests'
allow_untyped_decorators = true
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = 'pathspec'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'nox'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'nox_poetry'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'requests_toolbelt'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'noxfile'
ignore_missing_imports = true
follow_imports = 'skip'
allow_untyped_decorators = true

[tool.pyright]
include = ['peak']
exclude = ["**/.venv", "**/__pycache__", "**/stubs"]
stubPath = "./stubs"
useLibraryCodeForTypes = true

[tool.poetry.scripts]
peak = { callable = "peak.cli.cli:typer_app" }

[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"
