{"version":3,"file":"src_components_log-viewer_index_tsx-node_modules_pnpm_xterm_5_3_0_node_modules_xterm_css_xterm_css.async.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAWA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChKA;AAKA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAzMA;AAmGA;AAAA;AAwGA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@secretflow/secretnote/./src/components/log-viewer/highlight-addon.ts","webpack://@secretflow/secretnote/./src/components/log-viewer/hooks/useAddon.ts","webpack://@secretflow/secretnote/./src/components/log-viewer/hooks/useDebounceInput.ts","webpack://@secretflow/secretnote/./src/components/log-viewer/hooks/useThrottle.ts","webpack://@secretflow/secretnote/./src/components/log-viewer/index.tsx","webpack://@secretflow/secretnote/./src/components/log-viewer/view.tsx","webpack://@secretflow/secretnote/./src/components/log-viewer/index.less?1acc"],"sourcesContent":["import type { IBufferLine, IDecorationOptions, ITerminalAddon, Terminal } from 'xterm';\n\nexport interface IHighlightOptions {\n  keyword: string;\n  ignoreSensitive?: boolean;\n  decorations: {\n    matchForegroundColor?: string;\n    matchBackground?: string;\n  };\n}\n\nexport class HighlightAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _cacheDecorations = new Map();\n  private _highlightTimeout = 0;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  private _getLineProperty(line: IBufferLine) {\n    let index = 0;\n    let cell = line.getCell(index);\n    let width = 0;\n    let isAllBgDefault = true;\n    let isAllFgDefault = true;\n    while (cell) {\n      if (!cell.isBgDefault()) {\n        isAllBgDefault = false;\n      }\n      if (!cell.isFgDefault()) {\n        isAllFgDefault = false;\n      }\n      width += cell.getWidth();\n      cell = line.getCell(index);\n      index++;\n    }\n    return {\n      width: width,\n      isAllBgDefault: isAllBgDefault,\n      isAllFgDefault: isAllFgDefault,\n    };\n  }\n\n  private _decoration(\n    line: IBufferLine,\n    lineIndex: number,\n    matchOption?: IHighlightOptions,\n  ) {\n    if (!this._terminal) {\n      return;\n    }\n    if (!(matchOption && matchOption.decorations)) {\n      return;\n    }\n    const terminal = this._terminal;\n    const { width, isAllBgDefault, isAllFgDefault } = this._getLineProperty(line);\n    if (!isAllBgDefault || !isAllFgDefault) {\n      return;\n    }\n    const marker = terminal.registerMarker(\n      -terminal.buffer.active.baseY - terminal.buffer.active.cursorY + lineIndex,\n    );\n    if (marker) {\n      const decorationOptions: IDecorationOptions = {\n        marker: marker,\n        x: 0,\n        width: width,\n        backgroundColor: matchOption.decorations.matchBackground,\n        foregroundColor: matchOption.decorations.matchForegroundColor,\n        layer: 'bottom',\n      };\n      const decoration = terminal.registerDecoration(decorationOptions);\n      if (decoration) {\n        decoration.onDispose(() => {\n          marker.dispose();\n        });\n        this._cacheDecorations.set(lineIndex, decoration);\n      }\n    }\n  }\n\n  private _clearDecoration() {\n    this._cacheDecorations.forEach((decoration) => {\n      decoration.dispose();\n    });\n    this._cacheDecorations.clear();\n  }\n\n  private _updateHighlight(options: IHighlightOptions[]) {\n    if (!this._terminal) {\n      return;\n    }\n    if (!Array.isArray(options)) {\n      return;\n    }\n    this._clearDecoration();\n    const terminal = this._terminal;\n    let lineIndex = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    let prevMatch: IHighlightOptions | undefined;\n    const _loop = () => {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      const string = line?.translateToString(!lineWrapsToNext);\n      if (string) {\n        if (line?.isWrapped && prevMatch) {\n          this._decoration(line, lineIndex, prevMatch);\n        } else {\n          const matchOption = options.find((option) => {\n            const keyword = option.keyword || '';\n            if (option.ignoreSensitive) {\n              const lowerString = string.toLowerCase();\n              return (\n                lowerString.includes(keyword.toLowerCase()) ||\n                lowerString.includes(keyword)\n              );\n            }\n            return string.includes(keyword);\n          });\n          prevMatch = matchOption;\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          this._decoration(line!, lineIndex, matchOption);\n        }\n      }\n      lineIndex++;\n      line = nextLine;\n    };\n    while (line) {\n      _loop();\n    }\n  }\n\n  public highlight(options: IHighlightOptions[]) {\n    if (!this._terminal) {\n      return;\n    }\n    if (!Array.isArray(options)) {\n      return;\n    }\n    this._cacheDecorations = new Map();\n    const terminal = this._terminal;\n    terminal.onWriteParsed(() => {\n      clearTimeout(this._highlightTimeout);\n      this._highlightTimeout = window.setTimeout(() => {\n        this._updateHighlight(options);\n      }, 0);\n    });\n\n    terminal.onResize(() => {\n      clearTimeout(this._highlightTimeout);\n      this._highlightTimeout = window.setTimeout(() => {\n        this._updateHighlight(options);\n      }, 0);\n    });\n  }\n\n  public dispose() {\n    clearTimeout(this._highlightTimeout);\n    this._cacheDecorations.clear();\n  }\n}\n","import { useEffect, useState, useRef } from 'react';\nimport type { Terminal, ITerminalAddon } from 'xterm';\n\ntype Callback = (terminal: Terminal, addon: ITerminalAddon) => void;\n\nfunction useAddon(\n  terminal: Terminal | undefined,\n  Addon: new () => ITerminalAddon,\n  loadable: boolean,\n  callback?: Callback,\n) {\n  const [addonInstance, setAddonInstance] = useState<ITerminalAddon>();\n  const ref = useRef(callback);\n\n  useEffect(() => {\n    ref.current = callback;\n  });\n\n  useEffect(() => {\n    const addon = new Addon();\n    if (loadable && terminal) {\n      terminal.loadAddon(addon);\n      setAddonInstance(addon);\n      if (ref.current instanceof Function) {\n        ref.current(terminal, addon);\n      }\n    }\n    return function () {\n      setAddonInstance(undefined);\n      addon.dispose();\n    };\n  }, [terminal, Addon, loadable]);\n\n  return addonInstance;\n}\n\nexport default useAddon;\n","import { useCallback, useEffect, useRef } from 'react';\n\ntype Callback = (val: string) => void;\n\nfunction useDebounceInput(cb: Callback, delay: number) {\n  const cbRef = useRef(cb);\n  const timerRef = useRef<number>(0);\n  useEffect(function () {\n    cbRef.current = cb;\n  });\n  useEffect(function () {\n    return function () {\n      clearTimeout(timerRef.current);\n    };\n  }, []);\n  return useCallback(\n    function (e: React.ChangeEvent<HTMLInputElement>) {\n      const value = e.target.value;\n      clearTimeout(timerRef.current);\n      timerRef.current = window.setTimeout(function () {\n        cbRef.current(value);\n      }, delay);\n    },\n    [delay],\n  );\n}\n\nexport default useDebounceInput;\n","import throttle from 'lodash.throttle';\nimport { useRef, useCallback, useEffect } from 'react';\n\ntype Callback = () => void;\nconst useThrottle = function useThrottle(cb: Callback, delay: number) {\n  const cbRef = useRef(cb);\n  useEffect(function () {\n    cbRef.current = cb;\n  });\n  return useCallback(\n    function () {\n      return throttle(cbRef.current, delay)();\n    },\n    [delay],\n  );\n};\n\nexport default useThrottle;\n","import { LogView } from './view';\n\nexport default LogView;\n","import {\n  ArrowDownToLine,\n  ArrowUpToLine,\n  ChevronDown,\n  ChevronUp,\n  XCircle,\n} from 'lucide-react';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport type { ITerminalAddon } from 'xterm';\nimport { Terminal } from 'xterm';\nimport { CanvasAddon } from 'xterm-addon-canvas';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { SearchAddon } from 'xterm-addon-search';\nimport { WebLinksAddon } from 'xterm-addon-web-links';\n\nimport 'xterm/css/xterm.css';\nimport { HighlightAddon } from './highlight-addon';\nimport useAddon from './hooks/useAddon';\nimport useDebounceInput from './hooks/useDebounceInput';\nimport useThrottle from './hooks/useThrottle';\nimport './index.less';\n\nconst defaultSearchOptions = {\n  regex: false,\n  wholeWord: false,\n  caseSensitive: false,\n  incremental: false,\n  decorations: {\n    matchForegroundColor: '#000000',\n    matchBackground: '#ffff54',\n    matchBorder: 'none',\n    matchOverviewRuler: 'none',\n    activeMatchBackground: '#ff9540',\n    activeMatchBorder: 'none',\n    activeMatchColorOverviewRuler: 'none',\n  },\n};\n\nconst defaultTerminalOptions = {\n  cursorBlink: false,\n  convertEol: false,\n  scrollback: Number.MAX_SAFE_INTEGER,\n  drawBoldTextInBrightColors: false,\n  allowProposedApi: true,\n  allowTransparency: true,\n  fontSize: 13,\n  fontFamily: 'Roboto Mono,Andale Mono,Consolas,Courier New,monospace',\n  lineHeight: 20 / 17,\n  fastScrollSensitivity: 35,\n  theme: {\n    selectionBackground: '#fff',\n    selectionForeground: '#fff',\n    background: '#24292e',\n    foreground: '#b5bbc6',\n  },\n};\n\nconst defaultHighlightOptions = [\n  {\n    keyword: '[error]',\n    ignoreSensitive: true,\n    decorations: {\n      matchForegroundColor: 'red',\n      matchBackground: '#24292e',\n    },\n  },\n  {\n    keyword: '[warn]',\n    ignoreSensitive: true,\n    decorations: {\n      matchForegroundColor: 'yellow',\n      matchBackground: '#24292e',\n    },\n  },\n  {\n    keyword: '[debug]',\n    ignoreSensitive: true,\n    decorations: {\n      matchForegroundColor: 'green',\n      matchBackground: '#24292e',\n    },\n  },\n];\n\ninterface IProps {\n  code: string;\n}\n\nconst LogView = (props: IProps) => {\n  const [terminalInstance, setTerminalInstance] = useState<Terminal>();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResult, setSearchResult] = useState({ resultIndex: -1, resultCount: 0 });\n  const domRef = useRef<HTMLDivElement>(null);\n  const mountedRef = useRef(false);\n\n  // init terminal\n  useEffect(() => {\n    const instance = new Terminal(defaultTerminalOptions);\n    setTerminalInstance(instance);\n    return () => {\n      instance.dispose();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (domRef.current) {\n      if (terminalInstance) {\n        terminalInstance.open(domRef.current);\n        mountedRef.current = true;\n      }\n    }\n    return () => {\n      if (terminalInstance) {\n        terminalInstance.clear();\n        mountedRef.current = false;\n      }\n    };\n  }, [terminalInstance]);\n\n  // init addons\n  useAddon(terminalInstance, CanvasAddon, !!terminalInstance);\n  useAddon(terminalInstance, WebLinksAddon, !!terminalInstance);\n  const fitInstance = useAddon(\n    terminalInstance,\n    FitAddon,\n    !!terminalInstance,\n  ) as FitAddon;\n  const searcherInstance = useAddon(\n    terminalInstance,\n    SearchAddon,\n    !!terminalInstance,\n    useCallback((terminal: Terminal, addon: ITerminalAddon) => {\n      const searchAddon = addon as SearchAddon;\n      if (searchAddon && searchAddon.onDidChangeResults) {\n        searchAddon.onDidChangeResults((e) => {\n          setSearchResult(\n            e || {\n              resultIndex: -1,\n              resultCount: 0,\n            },\n          );\n        });\n      }\n    }, []),\n  ) as SearchAddon;\n  useAddon(\n    terminalInstance,\n    HighlightAddon,\n    !!terminalInstance,\n    (terminal, instance) => {\n      const hInstance = instance as HighlightAddon;\n      if (hInstance) {\n        hInstance.highlight(defaultHighlightOptions);\n      }\n    },\n  );\n\n  // init data\n  useEffect(() => {\n    if (terminalInstance) {\n      const code = props.code.replaceAll('\\n', '\\r\\n');\n      terminalInstance.write(code);\n    }\n  }, [terminalInstance, props.code]);\n\n  // auto fit\n  const throttleFit = useThrottle(() => {\n    if (mountedRef.current && fitInstance && fitInstance.fit) {\n      fitInstance.fit();\n    }\n  }, 3000);\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(throttleFit);\n    const dom = domRef.current;\n    if (dom) {\n      resizeObserver.observe(dom);\n    }\n    return () => {\n      if (dom) {\n        resizeObserver.unobserve(dom);\n        resizeObserver.disconnect();\n      }\n    };\n  }, [fitInstance, throttleFit]);\n\n  // search\n  const onSearchChange = useDebounceInput((value: string) => {\n    if (searcherInstance) {\n      searcherInstance.findNext(value, defaultSearchOptions);\n    }\n  }, 800);\n\n  const onSearchClear = useCallback(() => {\n    if (searcherInstance) {\n      searcherInstance.findNext('', defaultSearchOptions);\n    }\n  }, [searcherInstance]);\n\n  const onSearchPre = useCallback(\n    (value: string) => {\n      if (searcherInstance) {\n        searcherInstance.findPrevious(value, defaultSearchOptions);\n      }\n    },\n    [searcherInstance],\n  );\n\n  const onSearchNext = useCallback(\n    (value: string) => {\n      if (searcherInstance) {\n        searcherInstance.findNext(value, defaultSearchOptions);\n      }\n    },\n    [searcherInstance],\n  );\n\n  const onScrollTop = useCallback(() => {\n    if (terminalInstance) {\n      terminalInstance.scrollToTop();\n    }\n  }, [terminalInstance]);\n\n  const onScrollBottom = useCallback(() => {\n    if (terminalInstance) {\n      terminalInstance.scrollToBottom();\n    }\n  }, [terminalInstance]);\n\n  const render = (\n    <div className=\"terminal-viewer\">\n      <div className=\"terminal-viewer-header\">\n        <div className=\"terminal-viewer-input-wrapper\">\n          <input\n            className=\"terminal-viewer-input\"\n            value={searchValue}\n            type=\"text\"\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                onSearchNext(searchValue);\n              }\n            }}\n            onChange={(e) => {\n              setSearchValue(e.target.value);\n              onSearchChange(e);\n            }}\n          />\n          <div className=\"terminal-viewer-input-suffix\">\n            {searchValue && (\n              <span className=\"input-suffix-search-result\">\n                {searchResult.resultCount}\n              </span>\n            )}\n            <span\n              className=\"input-suffix-clear\"\n              onClick={() => {\n                setSearchValue('');\n                onSearchClear();\n              }}\n            >\n              <XCircle size={16} />\n            </span>\n            <span\n              className=\"input-suffix-search-tool\"\n              onClick={() => onSearchPre(searchValue)}\n            >\n              <ChevronUp size={16} />\n            </span>\n            <span\n              className=\"input-suffix-search-tool\"\n              onClick={() => onSearchNext(searchValue)}\n            >\n              <ChevronDown size={16} />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"terminal-viewer-body\" ref={domRef} />\n      <div className=\"terminal-viewer-toolbar\">\n        <div className=\"terminal-viewer-toolbar-button\" onClick={onScrollTop}>\n          <ArrowUpToLine size={16} />\n        </div>\n        <div className=\"terminal-viewer-toolbar-button\" onClick={onScrollBottom}>\n          <ArrowDownToLine size={16} />\n        </div>\n      </div>\n    </div>\n  );\n  return render;\n};\n\nexport { LogView };\n","// extracted by mini-css-extract-plugin\nexport {};\n    if(module.hot) {\n      // 1700794982341\n      var cssReload = require(\"../../../../../node_modules/.pnpm/@umijs+bundler-webpack@4.0.86_styled-components@6.1.0_typescript@5.2.2_webpack@5.89.0/node_modules/@umijs/bundler-webpack/compiled/mini-css-extract-plugin/hmr/hotModuleReplacement.js\")(module.id, {\"publicPath\":\"./\",\"emit\":true,\"esModule\":true,\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"names":[],"sourceRoot":""}