Metadata-Version: 2.1
Name: mat3ra-templator
Version: 2024.3.21.post0
Summary: A template for Python projects.
Author-email: "Exabyte Inc." <info@mat3ra.com>
License: # LICENSE
        
        Copyright 2024 Exabyte Inc.
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
           http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
        
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Software Development
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: numpy
Provides-Extra: tests
Requires-Dist: coverage[toml]>=5.3; extra == "tests"
Requires-Dist: pre-commit; extra == "tests"
Requires-Dist: black; extra == "tests"
Requires-Dist: ruff; extra == "tests"
Requires-Dist: isort; extra == "tests"
Requires-Dist: mypy; extra == "tests"
Requires-Dist: pip-tools; extra == "tests"
Provides-Extra: all
Requires-Dist: mat3ra-templator[tests]; extra == "all"

# template-definitions-js-py


A template for a dual repository (JavaScript and Python).

The GitHub workflow requires the following variables to be defined:

  - `secrets.BOT_GITHUB_TOKEN`
  - `secrets.BOT_GITHUB_KEY`

## Initialization

See example initalization in https://github.com/Exabyte-io/utils/pull/1/files.

When creating a new repository from this template, follow the items on the following checklist:

  - [ ] In `pyproject.toml` update `project.name`, `project.description`, and `project.classifiers`
        (if applicable).
  - [ ] Add Python dependencies to `pyproject.toml`. The `requirements*.txt` files can be generated
        automatically using `pip-compile`.
  - [ ] In `./src/py` replace the `templator` directory with your Python package name.
  - [ ] Install `pre-commit` if not already present (e.g. `pip install pre-commit`).
  - [ ] In `package.json`, update `"name"` and `"description"`.
  - [ ] Add JS/TS dependencies as usual (`npm install <pkg>` or `npm install --save-dev <pkg>`).

### Pre-Commit Hooks

The pre-commit hooks can be managed by: (1) the `pre-commit` tool (see [docs](https://pre-commit.com/)) in or pre-commit 
hooks via `husky` and `husky install`. Note that the hooks are only activated when the package is installed locally 
(`npm install`) and not when installed as a dependency.
