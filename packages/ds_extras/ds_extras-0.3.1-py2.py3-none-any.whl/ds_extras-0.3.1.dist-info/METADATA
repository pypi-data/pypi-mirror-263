Metadata-Version: 2.1
Name: ds_extras
Version: 0.3.1
Summary: my demiansoft extras
Author-email: Hyungjin Kim <hj3415@gmail.com>
Description-Content-Type: text/markdown
Classifier: License :: OSI Approved :: MIT License
Requires-Dist: Django >= 5.0.3
Requires-Dist: pillow >= 10.2.0
Project-URL: Home, https://www.demiansoft.com

### ds_extras

#### Introduction

demiansoft 에서 사용하는 장고앱 모음으로 analyticsds, calendards, popupds, utilsds 앱으로 구성되어 있다.

---
#### Requirements

Django >= 5.0.3
pillow >= 10.2.0

---
#### Install

```
>> pip install ds_extras
>> python manage.py makemigrations ds_extras
>> python manage.py migrate
```

settings.py

```
INSTALLED_APPS = [  
    ...
    
    'utilsds',  
    'popupds',  
    'analyticsds',  
    'calendards',  
]

...

MEDIA_URL = '/media/'  
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')  
X_FRAME_OPTIONS = 'SAMEORIGIN'
```

---
#### Composition

##### anlyticsds
네이버와 구글 애널리틱스 통계자료 수집을 위한 연결 코드를 만들어주는 앱

html 파일 내에서 다음 코드를 삽입하여 사용한다.
```html
{% load analyticsds_tags %}
{% make_analytics %}
```

프로젝트내 \_data 폴더안에 analyticsds.py 를 생성하여 다음의 형식으로 작성한다.
```
context = {  
    'analytics': {  
        'google_id': "구글 애널리틱스 아이디",  
        'naver_id': "네이버 애널리틱스 아이디",  
        'ads_id': "구글 애즈 아이디",  
        'conversion_click': {  
            # cta 버튼 수에 맞춰서 추가 한다.  
            'cta1': "전환추적 이벤트스니펫코드에서..",  
            'cta2': "전환추적 이벤트스니펫코드에서..",  
            'calling': "전환추적 이벤트스니펫코드에서..",  
        },  
    },  
}
```

1. 네이버 애널리틱스  
    - https://analytics.naver.com/ 에서 아이디 발급후 naver_id 변수에 입력  
2. 구글 애널리틱스  
    - https://analytics.google.com/ 에서 계정 및 속성 생성후 google_id 변수에 입력  
3. 구글 애즈  
    - ads_id 및 conversion_click, conversion_pageload 변수는 전환추적에 이용한다.  
    - https://ads.google.com/ 에서 전환을 생성하여 태그를 생성하여 이벤트 스니펫 코드를 등록한다.  
    (목표 - 전환 - 요약 - 전환 아이템에서 태그 설정)  
  
- conversion_click 딕셔너리 형식 의미  
  추적을 원하는 버튼 링크를 \<a href> 형식이 아닌 \<a onclick> 형식으로 제작하여 onclick에  {{ key }}\_gtag_report_conversion(url) 형식으로 함수를 호출한다.  
- cta 및 calling section 수정(함수 이름 맞추기)이 필요하다. 

##### calendards
달력 형식의 팝업창을 띄워주는 앱. 팝업창은 한개만 activation이 가능하기 때문에 관리자 창에서 popupds 앱 포함 1개만 activation 시켜줘야 한다.

html 파일 내에서 다음 코드를 삽입하여 사용한다.
```html
{% load calendards_tags %}  
{% show_calendar %}
```

admin 페이지에서 calendar, event 테이블에 달력과 날짜를 세팅하여 사용한다.

##### popupds
이미지 형식의 팝업창을 띄워주는 앱 형식에 따라 5가지를 준비해 놓았다. 팝업창은 한개만 activation이 가능하기 때문에 관리자 창에서 calendards 앱 포함 1개만 activation 시켜줘야 한다.

html 파일 내에서 다음 코드를 삽입하여 사용한다.
```html
{% load popupds_tags %}  
{% show_popup %}
```

admin 페이지에서 type1 - 5 테이블에 형식을 세팅하여 사용한다.

##### utilsds
여러가지 유틸리티 태그 모음앱으로 현재 split 태그 사용가능하다.

```
{{ "test/utils/app"|split:"/" }}

-> ['test', 'utils', 'app']
```
value 값을 / 을 단위로 나눠서 리스트 형식으로 반환한다.

또는 views.py 에서 직접 불러서 사용할수 있다.
```python
from ds_extras.utilsds import utils
```

get_json(path: str) - json 형식의 데이터 파일을 불러온다.
mail_to(title: str, text: str, mail_addr) - 메일을 보낸다.
make_robots() - robots.txt에 해당하는 내용을 만들어 반환한다.



