import typing_extensions
from amsdal_models.classes.handlers.object_id_handler import ObjectIdHandler as ObjectIdHandler
from typing import Any, Literal

IncEx: typing_extensions.TypeAlias

class ReferenceHandler(ObjectIdHandler):
    _serialize_with_refs: bool
    _exclude_none: bool
    def ser_model(self) -> dict[str, Any]: ...
    def model_dump_refs(self, *, mode: Literal['json', 'python'] | str = 'python', include: IncEx = None, exclude: IncEx = None, by_alias: bool = False, exclude_unset: bool = False, exclude_defaults: bool = False, exclude_none: bool = False, round_trip: bool = False, warnings: bool = True) -> dict[str, Any]: ...
    def model_dump(self, *, mode: Literal['json', 'python'] | str = 'python', include: IncEx = None, exclude: IncEx = None, by_alias: bool = False, exclude_unset: bool = False, exclude_defaults: bool = False, exclude_none: bool = False, round_trip: bool = False, warnings: bool = True) -> dict[str, Any]: ...
    def model_dump_json_refs(self, *, indent: int | None = None, include: IncEx = None, exclude: IncEx = None, by_alias: bool = False, exclude_unset: bool = False, exclude_defaults: bool = False, exclude_none: bool = False, round_trip: bool = False, warnings: bool = True) -> str: ...
    def model_dump_json(self, *, indent: int | None = None, include: IncEx = None, exclude: IncEx = None, by_alias: bool = False, exclude_unset: bool = False, exclude_defaults: bool = False, exclude_none: bool = False, round_trip: bool = False, warnings: bool = True) -> str: ...
