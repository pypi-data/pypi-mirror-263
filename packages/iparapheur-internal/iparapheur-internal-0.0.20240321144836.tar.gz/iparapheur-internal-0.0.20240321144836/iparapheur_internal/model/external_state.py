# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic.   # noqa: E501

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from iparapheur_internal import schemas  # noqa: F401


class ExternalState(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        enum_value_to_name = {
            "FORM": "FORM",
            "ACTIVE": "ACTIVE",
            "SIGNED": "SIGNED",
            "REFUSED": "REFUSED",
            "EXPIRED": "EXPIRED",
            "CREATED": "CREATED",
            "IN_REDACTION": "IN_REDACTION",
            "DELETED": "DELETED",
            "SENT": "SENT",
            "SENT_AGAIN": "SENT_AGAIN",
            "RECEIVED_PARTIALLY": "RECEIVED_PARTIALLY",
            "RECEIVED": "RECEIVED",
            "NOT_RECEIVED": "NOT_RECEIVED",
            "ERROR": "ERROR",
        }
    
    @schemas.classproperty
    def FORM(cls):
        return cls("FORM")
    
    @schemas.classproperty
    def ACTIVE(cls):
        return cls("ACTIVE")
    
    @schemas.classproperty
    def SIGNED(cls):
        return cls("SIGNED")
    
    @schemas.classproperty
    def REFUSED(cls):
        return cls("REFUSED")
    
    @schemas.classproperty
    def EXPIRED(cls):
        return cls("EXPIRED")
    
    @schemas.classproperty
    def CREATED(cls):
        return cls("CREATED")
    
    @schemas.classproperty
    def IN_REDACTION(cls):
        return cls("IN_REDACTION")
    
    @schemas.classproperty
    def DELETED(cls):
        return cls("DELETED")
    
    @schemas.classproperty
    def SENT(cls):
        return cls("SENT")
    
    @schemas.classproperty
    def SENT_AGAIN(cls):
        return cls("SENT_AGAIN")
    
    @schemas.classproperty
    def RECEIVED_PARTIALLY(cls):
        return cls("RECEIVED_PARTIALLY")
    
    @schemas.classproperty
    def RECEIVED(cls):
        return cls("RECEIVED")
    
    @schemas.classproperty
    def NOT_RECEIVED(cls):
        return cls("NOT_RECEIVED")
    
    @schemas.classproperty
    def ERROR(cls):
        return cls("ERROR")
