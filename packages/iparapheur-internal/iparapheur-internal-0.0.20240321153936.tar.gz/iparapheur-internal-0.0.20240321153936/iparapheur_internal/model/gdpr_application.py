# coding: utf-8

"""
    iparapheur

    iparapheur v5.x main core application.  The main link between every sub-services, integrating business code logic.   # noqa: E501

    The version of the OpenAPI document: DEVELOP
    Contact: iparapheur@libriciel.coop
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from iparapheur_internal import schemas  # noqa: F401


class GdprApplication(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            name = schemas.StrSchema
            cookieSessionDuration = schemas.StrSchema
            
            
            class mandatoryCookies(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'mandatoryCookies':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class preservedDataAfterDeletion(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'preservedDataAfterDeletion':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class optionalCookies(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['GdprCookie']:
                        return GdprCookie
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['GdprCookie'], typing.List['GdprCookie']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'optionalCookies':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'GdprCookie':
                    return super().__getitem__(i)
            noCookies = schemas.BoolSchema
        
            @staticmethod
            def editor() -> typing.Type['GdprEntity']:
                return GdprEntity
            noDataProcessed = schemas.BoolSchema
            noDataCollected = schemas.BoolSchema
            
            
            class dataProcesses(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['GdprDataElement']:
                        return GdprDataElement
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['GdprDataElement'], typing.List['GdprDataElement']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'dataProcesses':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'GdprDataElement':
                    return super().__getitem__(i)
            
            
            class collectedDataSet(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['GdprDataSet']:
                        return GdprDataSet
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['GdprDataSet'], typing.List['GdprDataSet']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'collectedDataSet':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'GdprDataSet':
                    return super().__getitem__(i)
            __annotations__ = {
                "name": name,
                "cookieSessionDuration": cookieSessionDuration,
                "mandatoryCookies": mandatoryCookies,
                "preservedDataAfterDeletion": preservedDataAfterDeletion,
                "optionalCookies": optionalCookies,
                "noCookies": noCookies,
                "editor": editor,
                "noDataProcessed": noDataProcessed,
                "noDataCollected": noDataCollected,
                "dataProcesses": dataProcesses,
                "collectedDataSet": collectedDataSet,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cookieSessionDuration"]) -> MetaOapg.properties.cookieSessionDuration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mandatoryCookies"]) -> MetaOapg.properties.mandatoryCookies: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preservedDataAfterDeletion"]) -> MetaOapg.properties.preservedDataAfterDeletion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["optionalCookies"]) -> MetaOapg.properties.optionalCookies: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["noCookies"]) -> MetaOapg.properties.noCookies: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["editor"]) -> 'GdprEntity': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["noDataProcessed"]) -> MetaOapg.properties.noDataProcessed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["noDataCollected"]) -> MetaOapg.properties.noDataCollected: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dataProcesses"]) -> MetaOapg.properties.dataProcesses: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["collectedDataSet"]) -> MetaOapg.properties.collectedDataSet: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["name", "cookieSessionDuration", "mandatoryCookies", "preservedDataAfterDeletion", "optionalCookies", "noCookies", "editor", "noDataProcessed", "noDataCollected", "dataProcesses", "collectedDataSet", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cookieSessionDuration"]) -> typing.Union[MetaOapg.properties.cookieSessionDuration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mandatoryCookies"]) -> typing.Union[MetaOapg.properties.mandatoryCookies, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preservedDataAfterDeletion"]) -> typing.Union[MetaOapg.properties.preservedDataAfterDeletion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["optionalCookies"]) -> typing.Union[MetaOapg.properties.optionalCookies, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["noCookies"]) -> typing.Union[MetaOapg.properties.noCookies, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["editor"]) -> typing.Union['GdprEntity', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["noDataProcessed"]) -> typing.Union[MetaOapg.properties.noDataProcessed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["noDataCollected"]) -> typing.Union[MetaOapg.properties.noDataCollected, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dataProcesses"]) -> typing.Union[MetaOapg.properties.dataProcesses, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["collectedDataSet"]) -> typing.Union[MetaOapg.properties.collectedDataSet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["name", "cookieSessionDuration", "mandatoryCookies", "preservedDataAfterDeletion", "optionalCookies", "noCookies", "editor", "noDataProcessed", "noDataCollected", "dataProcesses", "collectedDataSet", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        cookieSessionDuration: typing.Union[MetaOapg.properties.cookieSessionDuration, str, schemas.Unset] = schemas.unset,
        mandatoryCookies: typing.Union[MetaOapg.properties.mandatoryCookies, list, tuple, schemas.Unset] = schemas.unset,
        preservedDataAfterDeletion: typing.Union[MetaOapg.properties.preservedDataAfterDeletion, list, tuple, schemas.Unset] = schemas.unset,
        optionalCookies: typing.Union[MetaOapg.properties.optionalCookies, list, tuple, schemas.Unset] = schemas.unset,
        noCookies: typing.Union[MetaOapg.properties.noCookies, bool, schemas.Unset] = schemas.unset,
        editor: typing.Union['GdprEntity', schemas.Unset] = schemas.unset,
        noDataProcessed: typing.Union[MetaOapg.properties.noDataProcessed, bool, schemas.Unset] = schemas.unset,
        noDataCollected: typing.Union[MetaOapg.properties.noDataCollected, bool, schemas.Unset] = schemas.unset,
        dataProcesses: typing.Union[MetaOapg.properties.dataProcesses, list, tuple, schemas.Unset] = schemas.unset,
        collectedDataSet: typing.Union[MetaOapg.properties.collectedDataSet, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'GdprApplication':
        return super().__new__(
            cls,
            *_args,
            name=name,
            cookieSessionDuration=cookieSessionDuration,
            mandatoryCookies=mandatoryCookies,
            preservedDataAfterDeletion=preservedDataAfterDeletion,
            optionalCookies=optionalCookies,
            noCookies=noCookies,
            editor=editor,
            noDataProcessed=noDataProcessed,
            noDataCollected=noDataCollected,
            dataProcesses=dataProcesses,
            collectedDataSet=collectedDataSet,
            _configuration=_configuration,
            **kwargs,
        )

from iparapheur_internal.model.gdpr_cookie import GdprCookie
from iparapheur_internal.model.gdpr_data_element import GdprDataElement
from iparapheur_internal.model.gdpr_data_set import GdprDataSet
from iparapheur_internal.model.gdpr_entity import GdprEntity
