# coding: utf-8

"""
    Carrier API

    **Seaplane Global Messaging Service**  For information about authentication see [authentication](/docs/authentication)   # noqa: E501

    The version of the OpenAPI document: 1.1.0-beta
    Contact: support@seaplane.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import seaplane.gen.carrier
from seaplane.gen.carrier.models.carrier_stream import CarrierStream  # noqa: E501
from seaplane.gen.carrier.rest import ApiException


class TestCarrierStream(unittest.TestCase):
    """CarrierStream unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CarrierStream
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `CarrierStream`
        """
        model = seaplane.gen.carrier.models.carrier_stream.CarrierStream()  # noqa: E501
        if include_optional :
            return CarrierStream(
                name = 'example-stream', 
                options = seaplane.gen.carrier.models.carrier_stream_options.CarrierStreamOptions(
                    message_ttl = 3600, 
                    max_messages = 1000000, 
                    max_size = 100000000, 
                    replicas = 3, 
                    allow_locations = ["region/xn"], 
                    deny_locations = ["country/nl"], 
                    wait_for_ack = True, 
                    ack_timeout = 5, 
                    max_delivery_attempts = 5, 
                    max_delivery_time = 60, 
                    dead_letter_sink = 'dead-letter-sink', 
                    allow_direct = False, ), 
                details = seaplane.gen.carrier.models.carrier_stream_details.CarrierStreamDetails(
                    creation_ts = 1677252000, 
                    stored_messages = 1000, 
                    stored_messages_size = 1000000000, 
                    first_message_seq = 1001, 
                    first_message_ts = 1677252001, 
                    last_message_seq = 2000, 
                    last_message_ts = 1677252999, 
                    subjects = {"subject_foo":10,"subject_bar":20}, )
            )
        else :
            return CarrierStream(
        )
        """

    def testCarrierStream(self):
        """Test CarrierStream"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
