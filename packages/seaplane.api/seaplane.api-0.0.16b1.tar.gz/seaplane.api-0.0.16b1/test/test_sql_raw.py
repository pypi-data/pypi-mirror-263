# coding: utf-8

"""
    Carrier API

    **Seaplane Global Messaging Service**  For information about authentication see [authentication](/docs/authentication)   # noqa: E501

    The version of the OpenAPI document: 1.1.0-beta
    Contact: support@seaplane.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import seaplane.gen.carrier
from seaplane.gen.carrier.models.sql_raw import SqlRaw  # noqa: E501
from seaplane.gen.carrier.rest import ApiException


class TestSqlRaw(unittest.TestCase):
    """SqlRaw unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SqlRaw
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `SqlRaw`
        """
        model = seaplane.gen.carrier.models.sql_raw.SqlRaw()  # noqa: E501
        if include_optional :
            return SqlRaw(
                driver = 'postgres', 
                dsn = 'postgres://foouser:foopass@localhost:5432/foodb?sslmode=disable', 
                query = 'INSERT INTO footable (foo, bar, baz) VALUES (?, ?, ?);', 
                args_mapping = 'root = [ this.cat.meow, this.doc.woofs[0] ]', 
                init_statement = 'CREATE TABLE IF NOT EXISTS some_table (
  foo varchar(50) not null,
  bar integer,
  baz varchar(50),
  primary key (foo)
) WITHOUT ROWID;
'
            )
        else :
            return SqlRaw(
                driver = 'postgres',
                dsn = 'postgres://foouser:foopass@localhost:5432/foodb?sslmode=disable',
                query = 'INSERT INTO footable (foo, bar, baz) VALUES (?, ?, ?);',
        )
        """

    def testSqlRaw(self):
        """Test SqlRaw"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
