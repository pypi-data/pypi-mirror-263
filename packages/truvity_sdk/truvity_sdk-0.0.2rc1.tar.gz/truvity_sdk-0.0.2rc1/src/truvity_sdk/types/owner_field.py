# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class OwnerField(str, enum.Enum):
    """
    Enum of all available values.
    """

    KIND_NAME = "KIND_NAME"
    KIND_VERSION = "KIND_VERSION"
    ID = "ID"
    REVISION = "REVISION"
    CREATED_AT = "CREATED_AT"
    MODIFIED_AT = "MODIFIED_AT"
    ETAG = "ETAG"
    DATA_FIRST_NAME = "DATA_FIRST_NAME"
    DATA_LAST_NAME = "DATA_LAST_NAME"
    DELETED_AT = "DELETED_AT"

    def visit(
        self,
        kind_name: typing.Callable[[], T_Result],
        kind_version: typing.Callable[[], T_Result],
        id: typing.Callable[[], T_Result],
        revision: typing.Callable[[], T_Result],
        created_at: typing.Callable[[], T_Result],
        modified_at: typing.Callable[[], T_Result],
        etag: typing.Callable[[], T_Result],
        data_first_name: typing.Callable[[], T_Result],
        data_last_name: typing.Callable[[], T_Result],
        deleted_at: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is OwnerField.KIND_NAME:
            return kind_name()
        if self is OwnerField.KIND_VERSION:
            return kind_version()
        if self is OwnerField.ID:
            return id()
        if self is OwnerField.REVISION:
            return revision()
        if self is OwnerField.CREATED_AT:
            return created_at()
        if self is OwnerField.MODIFIED_AT:
            return modified_at()
        if self is OwnerField.ETAG:
            return etag()
        if self is OwnerField.DATA_FIRST_NAME:
            return data_first_name()
        if self is OwnerField.DATA_LAST_NAME:
            return data_last_name()
        if self is OwnerField.DELETED_AT:
            return deleted_at()
