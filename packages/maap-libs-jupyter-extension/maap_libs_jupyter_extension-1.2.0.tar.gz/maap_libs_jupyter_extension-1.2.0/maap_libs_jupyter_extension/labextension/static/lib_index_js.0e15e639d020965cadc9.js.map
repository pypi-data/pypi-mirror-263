{"version":3,"file":"lib_index_js.0e15e639d020965cadc9.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACsH;AAC7B;AACO;AACzC;AACvD,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,yCAAyC,sFAA+B,CAAC,kDAA6B;AACtG;AACA,mDAAmD,sEAAsE,GAAG,kBAAkB,0CAA0C,GAAG,yBAAyB,mBAAmB,GAAG,OAAO,8EAA8E,KAAK,YAAY,OAAO,KAAK,YAAY,MAAM,KAAK,UAAU,mCAAmC,sCAAsC,GAAG,kBAAkB,0CAA0C,GAAG,yBAAyB,mBAAmB,GAAG,mBAAmB;AAC1kB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AACC;AACH;AACE;AACT;AACM;AACD;AACf;AACR;AAC5B;AACA;AACA;AACA,wBAAwB,6DAAU;AAClC,iDAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAU;AAC1B;AACA;AACA;AACA;AACA,oBAAoB,8DAAY;AAChC;AACA;AACA;AACA,oBAAoB,iEAAe;AACnC;AACA;AACA;AACA;AACA,yBAAyB,+DAAa;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,kEAAkB;AACrC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iEAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,0BAA0B,yCAAyC;AACnE,sBAAsB;AACtB;AACA;AACA;AACA,iEAAe,0CAA0C,EAAC;;;;;;;;;;;;;;;;;AC7GnD;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,8CAA8C;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;ACvEyF;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,sFAAO,aAAa;;;;;;;;;;ACZnC","sources":["webpack://maap-libs-jupyter-extension/./style/index.css","webpack://maap-libs-jupyter-extension/./lib/index.js","webpack://maap-libs-jupyter-extension/./lib/request.js","webpack://maap-libs-jupyter-extension/./style/index.css?0140","webpack://maap-libs-jupyter-extension/./style/maap.svg"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./maap.svg\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n:root {\\n    --jp-icon-maap: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n}\\n\\n.jp-MaapIcon {\\n  background-image: var(--jp-icon-maap);\\n}\\n.Toastify__toast-body {\\n  overflow: auto;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\";AACA;IACI,uDAA+B;AACnC;;AAEA;EACE,qCAAqC;AACvC;AACA;EACE,cAAc;AAChB\",\"sourcesContent\":[\"\\n:root {\\n    --jp-icon-maap: url('maap.svg');\\n}\\n\\n.jp-MaapIcon {\\n  background-image: var(--jp-icon-maap);\\n}\\n.Toastify__toast-body {\\n  overflow: auto;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { ICommandPalette } from '@jupyterlab/apputils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { ToolbarButton } from '@jupyterlab/apputils';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport { ElementExt } from '@lumino/domutils';\nimport { Notification } from \"@jupyterlab/apputils\";\nimport { PageConfig } from '@jupyterlab/coreutils';\nimport { request } from './request';\nimport '../style/index.css';\nlet DEFAULT_CODE = 'from maap.maap import MAAP\\n' +\n    'maap = MAAP()';\nlet api_server = '';\nvar valuesUrl = new URL(PageConfig.getBaseUrl() + 'jupyter-server-extension/getConfig');\nrequest('get', valuesUrl.href).then((res) => {\n    if (res.ok) {\n        let environment = JSON.parse(res.data);\n        api_server = environment['api_server'];\n        DEFAULT_CODE = 'from maap.maap import MAAP\\n' +\n            'maap = MAAP(maap_host=\\'' + api_server + '\\')';\n    }\n});\n/**\n * A notebook widget extension that adds a button to the toolbar.\n */\nexport class ButtonExtension {\n    /**\n     * Create a new extension object.\n     */\n    createNew(panel, context) {\n        let callback = () => {\n            // Select the first cell of the notebook\n            panel.content.activeCellIndex = 0;\n            panel.content.deselectAll();\n            if (panel.content.activeCell != null) {\n                ElementExt.scrollIntoViewIfNeeded(panel.content.node, panel.content.activeCell.node);\n            }\n            // Check if already there\n            if (panel.content.activeCell != null) {\n                if (panel.content.activeCell.model.value.text == DEFAULT_CODE) {\n                    Notification.error(\"MAAP defaults already imported to notebook.\");\n                }\n                else {\n                    // Insert code above selected first cell\n                    NotebookActions.insertAbove(panel.content);\n                    panel.content.activeCell.model.value.text = DEFAULT_CODE;\n                }\n            }\n        };\n        let button = new ToolbarButton({\n            className: 'myButton',\n            iconClass: 'jp-MaapIcon foo jp-Icon jp-Icon-16 jp-ToolbarButtonComponent-icon',\n            onClick: callback,\n            tooltip: 'Import MAAP Libraries'\n        });\n        panel.toolbar.insertItem(0, 'insertDefaults', button);\n        return new DisposableDelegate(() => {\n            button.dispose();\n        });\n    }\n}\n/**\n * Activate the extension.\n */\nfunction activateNbDefaults(app) {\n    app.docRegistry.addWidgetExtension('Notebook', new ButtonExtension());\n    console.log(\"insert defaults to notebook extension activated\");\n}\n;\nfunction hidePanels() {\n    const leftPanelParent = document.querySelector('.p-TabBar-content');\n    let tabsPanel = null;\n    if (leftPanelParent != null) {\n        tabsPanel = leftPanelParent.querySelector('li[title=\"Open Tabs\"]');\n    }\n    console.log('leftPanelParent');\n    console.log(leftPanelParent);\n    console.log('tabsPanel');\n    console.log(tabsPanel);\n    if (tabsPanel != null && leftPanelParent != null) {\n        leftPanelParent.removeChild(tabsPanel);\n    }\n    console.log('removing panel!');\n}\n/**\n * Initialization data for the insert_defaults_to_notebook extension.\n */\nconst extensionNbDefaults = {\n    id: 'insert_defaults_to_notebook',\n    autoStart: true,\n    activate: activateNbDefaults\n};\nconst extensionHidePanels = {\n    id: 'hide_unused_panels',\n    autoStart: true,\n    requires: [ICommandPalette],\n    activate: (app, palette) => {\n        const open_command = 'defaults:removePanel';\n        app.commands.addCommand(open_command, {\n            label: 'Hide Tabs',\n            isEnabled: () => true,\n            execute: args => {\n                hidePanels();\n            }\n        });\n        palette.addItem({ command: open_command, category: 'User' });\n        hidePanels(); // automatically call function at startup\n        console.log('remove panels activated');\n    }\n};\nexport default [extensionNbDefaults, extensionHidePanels];\n","export const DEFAULT_REQUEST_OPTIONS = {\n    ignoreCache: false,\n    headers: {\n        Accept: 'application/json, text/javascript, text/plain'\n    },\n    // default max duration for a request in ms\n    // currently set to 120s = 2min\n    timeout: 5000,\n};\nfunction queryParams(params = {}) {\n    return Object.keys(params)\n        .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n        .join('&');\n}\nfunction withQuery(url, params = {}) {\n    const queryString = queryParams(params);\n    return queryString ? url + (url.indexOf('?') === -1 ? '?' : '&') + queryString : url;\n}\nfunction parseXHRResult(xhr) {\n    return {\n        ok: xhr.status >= 200 && xhr.status < 300,\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: xhr.getAllResponseHeaders(),\n        data: xhr.responseText,\n        json: () => JSON.parse(xhr.responseText),\n        url: xhr.responseURL\n    };\n}\nfunction errorResponse(xhr, message = null) {\n    return {\n        ok: false,\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: xhr.getAllResponseHeaders(),\n        data: message || xhr.statusText,\n        json: () => JSON.parse(message || xhr.statusText),\n        url: xhr.responseURL\n    };\n}\nexport function request(method, url, queryParams = {}, body = null, options = DEFAULT_REQUEST_OPTIONS) {\n    const ignoreCache = options.ignoreCache || DEFAULT_REQUEST_OPTIONS.ignoreCache;\n    const headers = options.headers || DEFAULT_REQUEST_OPTIONS.headers;\n    const timeout = options.timeout || DEFAULT_REQUEST_OPTIONS.timeout;\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open(method, withQuery(url, queryParams));\n        if (headers) {\n            Object.keys(headers).forEach(key => xhr.setRequestHeader(key, headers[key]));\n        }\n        if (ignoreCache) {\n            xhr.setRequestHeader('Cache-Control', 'no-cache');\n        }\n        xhr.timeout = timeout;\n        xhr.onload = evt => {\n            resolve(parseXHRResult(xhr));\n        };\n        xhr.onerror = evt => {\n            resolve(errorResponse(xhr, 'Failed to make request.'));\n        };\n        xhr.ontimeout = evt => {\n            resolve(errorResponse(xhr, 'Request took longer than expected.'));\n        };\n        if (method === 'post' && body) {\n            xhr.setRequestHeader('Content-Type', 'application/json');\n            xhr.send(JSON.stringify(body));\n        }\n        else {\n            xhr.send();\n        }\n    });\n}\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","module.exports = \"data:image/svg+xml,%3Csvg fill='%23E0E0E0' height='18' viewBox='0 0 24 24' width='18' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E %3Cpath d='M0 0h24v24H0z' fill='none'/%3E %3Ctext x='50%25' y='50%25' dominant-baseline='central' text-anchor='middle' font-family='sans-serif' font-size='8px' fill='blue'%3EMAAP%3C/text%3E %3C/svg%3E\""],"names":[],"sourceRoot":""}