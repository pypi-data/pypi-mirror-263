[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
log_cli = false
log_cli_level = "CRITICAL"
log_cli_format = "%(message)s"
log_file = "pytest.log"
log_file_level = "WARNING"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
testpaths = [
  "tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::urllib3.exceptions.InsecureRequestWarning",
    "ignore::RuntimeWarning:numpy.linalg.linalg",
]

[tool.coverage.run]
parallel = true
source = ["qbraid"]
omit = [
  "**/qbraid/transpiler/conversions/cirq/cirq_gates.py",
  "**/qbraid/visualization/plot_conversions.py",
  "**/qbraid/visualization/draw_circuit.py.py",
  "**/qbraid/api/retry.py",
  "**/qbraid/api/system.py"
]

[tool.coverage.paths]
source = ["qbraid", ".tox/*/lib/python*/site-packages/qbraid"]

[tool.coverage.report]
show_missing = true
skip_covered = true
ignore_errors = true
exclude_lines = [
  "raise NotImplementedError",
  "return NotImplemented",
  "def __repr__",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "logger.debug"
]

[tool.coverage.html]
directory = "build/coverage"

[tool.coverage.xml]
output = "build/coverage/coverage.xml"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.__pycache__
  | \.tox
  | \.venv
  | dist
)/
'''

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 100
disable = "C0103, E0401, R0801, R0902, R0903, R0911, R0912, R0914, W0212, W0511"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
