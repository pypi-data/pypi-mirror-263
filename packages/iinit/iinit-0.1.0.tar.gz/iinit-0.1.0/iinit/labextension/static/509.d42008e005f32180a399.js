"use strict";(self.webpackChunkiinit=self.webpackChunkiinit||[]).push([[509],{509:(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var i=n(933),l=n(256),o=n(707);const a="jp-ilambda-Anchor",d={id:"iinit:plugin",description:"A jupyter lab/notebook front-end extension for initializing cells upon kernel startup",autoStart:!0,requires:[i.INotebookTracker],activate:(e,t)=>{var n;console.log("JupyterLab extension iinit is activated!"),(n=document.createElement("div")).innerHTML="<a href='https://www.lambda.joburg' target='_blank'><img src='https://lambda.joburg/assets/images/index/logo/lambda_logo.svg'></a>";const i=new l.Widget({node:n});i.id=o.DOMUtils.createDomID(),i.id="ilambda-logo",i.addClass(a),e.shell.add(i,"top",{rank:1e3});let d=document.getElementsByClassName(a);if(d.length>=2)for(let e=1;e<d.length;e++)d[e].remove();t.widgetAdded.connect((()=>{let n=e.shell.currentWidget;const i=t.currentWidget;let l=null==i?void 0:i.content;n&&n.revealed.then((()=>{n.context.sessionContext.ready.then((()=>{n.context.sessionContext.session.kernel.connectionStatusChanged.connect((()=>{var t,i;let o=null===(t=n.content.model)||void 0===t?void 0:t.cells,a=null==o?void 0:o.length;if(a)for(let t=0;t<a;t++)(null==o?void 0:o.get(t).getMetadata("iinit"))&&l&&(l.activeCellIndex=t,e.commands.execute("notebook:run-cell"),(null==o?void 0:o.get(t).getMetadata("ihide"))&&(null===(i=l.activeCell)||void 0===i||i.setHidden(!0)))}))}))}))}))}}}}]);