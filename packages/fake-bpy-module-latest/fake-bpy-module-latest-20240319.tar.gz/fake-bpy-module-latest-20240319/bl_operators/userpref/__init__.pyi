import typing
import bpy_types

GenericType = typing.TypeVar("GenericType")

class PREFERENCES_OT_addon_disable(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_addon_enable(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_addon_expand(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_options: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_addon_install(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_addon_refresh(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_addon_remove(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def draw(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_addon(self, module):
        """

        :param module:
        :type module:
        """
        ...

    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_addon_show(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_options: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_app_template_install(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_copy_prev(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, _context):
        """

        :param _context:
        :type _context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def previous_version(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyconfig_activate(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyconfig_export(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyconfig_import(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyconfig_remove(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyconfig_test(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyitem_add(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyitem_remove(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keyitem_restore(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_keymap_restore(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_script_directory_new(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_script_directory_remove(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_studiolight_copy_settings(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_studiolight_install(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_studiolight_new(bpy_types.Operator):
    ask_override: typing.Any
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def draw(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_studiolight_show(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_options: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, _context):
        """

        :param _context:
        :type _context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_studiolight_uninstall(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class PREFERENCES_OT_theme_install(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, _context):
        """

        :param self:
        :type self:
        :param _context:
        :type _context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def invoke(self, context, _event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param _event:
        :type _event:
        """
        ...

    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...
