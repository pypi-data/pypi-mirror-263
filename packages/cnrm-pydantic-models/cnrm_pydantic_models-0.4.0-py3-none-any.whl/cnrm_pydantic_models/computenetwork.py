# generated by datamodel-codegen:
#   filename:  computenetwork_v1beta1.json
#   timestamp: 2024-03-18T21:07:08+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field


class Condition(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lastTransitionTime: Optional[str] = Field(
        default=None,
        description='Last time the condition transitioned from one status to another.',
    )
    message: Optional[str] = Field(
        default=None,
        description='Human-readable message indicating details about last transition.',
    )
    reason: Optional[str] = Field(
        default=None,
        description="Unique, one-word, CamelCase reason for the condition's last transition.",
    )
    status: Optional[str] = Field(
        default=None,
        description='Status is the status of the condition. Can be True, False, Unknown.',
    )
    type: Optional[str] = Field(
        default=None, description='Type is the type of the condition.'
    )


class Model(BaseModel):
    apiVersion: Optional[str] = Field(
        default=None,
        description='apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        default=None,
        description='kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[Dict[str, Any]] = None
    spec: Optional[Spec] = None
    status: Optional[Status] = None


class Spec(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    autoCreateSubnetworks: Optional[bool] = Field(
        default=None,
        description='Immutable. When set to \'true\', the network is created in "auto subnet mode" and\nit will create a subnet for each region automatically across the\n\'10.128.0.0/9\' address range.\n\nWhen set to \'false\', the network is created in "custom subnet mode" so\nthe user can explicitly connect subnetwork resources.',
    )
    deleteDefaultRoutesOnCreate: Optional[bool] = Field(
        default=None,
        description="If set to 'true', default routes ('0.0.0.0/0') will be deleted\nimmediately after network creation. Defaults to 'false'.",
    )
    description: Optional[str] = Field(
        default=None,
        description='Immutable. An optional description of this resource. The resource must be\nrecreated to modify this field.',
    )
    enableUlaInternalIpv6: Optional[bool] = Field(
        default=None,
        description='Immutable. Enable ULA internal ipv6 on this network. Enabling this feature will assign\na /48 from google defined ULA prefix fd20::/20.',
    )
    internalIpv6Range: Optional[str] = Field(
        default=None,
        description='Immutable. When enabling ula internal ipv6, caller optionally can specify the /48 range\nthey want from the google defined ULA prefix fd20::/20. The input must be a\nvalid /48 ULA IPv6 address and must be within the fd20::/20. Operation will\nfail if the speficied /48 is already in used by another resource.\nIf the field is not speficied, then a /48 range will be randomly allocated from fd20::/20 and returned via this field.',
    )
    mtu: Optional[int] = Field(
        default=None,
        description="Immutable. Maximum Transmission Unit in bytes. The default value is 1460 bytes.\nThe minimum value for this field is 1300 and the maximum value is 8896 bytes (jumbo frames).\nNote that packets larger than 1500 bytes (standard Ethernet) can be subject to TCP-MSS clamping or dropped\nwith an ICMP 'Fragmentation-Needed' message if the packets are routed to the Internet or other VPCs\nwith varying MTUs.",
    )
    networkFirewallPolicyEnforcementOrder: Optional[str] = Field(
        default=None,
        description='Set the order that Firewall Rules and Firewall Policies are evaluated. Default value: "AFTER_CLASSIC_FIREWALL" Possible values: ["BEFORE_CLASSIC_FIREWALL", "AFTER_CLASSIC_FIREWALL"].',
    )
    resourceID: Optional[str] = Field(
        default=None,
        description='Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.',
    )
    routingMode: Optional[str] = Field(
        default=None,
        description='The network-wide routing mode to use. If set to \'REGIONAL\', this\nnetwork\'s cloud routers will only advertise routes with subnetworks\nof this network in the same region as the router. If set to \'GLOBAL\',\nthis network\'s cloud routers will advertise routes with all\nsubnetworks of this network, across regions. Possible values: ["REGIONAL", "GLOBAL"].',
    )


class Status(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    conditions: Optional[List[Condition]] = Field(
        default=None,
        description="Conditions represent the latest available observation of the resource's current state.",
    )
    gatewayIpv4: Optional[str] = Field(
        default=None,
        description='The gateway address for default routing out of the network. This value\nis selected by GCP.',
    )
    observedGeneration: Optional[int] = Field(
        default=None,
        description='ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.',
    )
    selfLink: Optional[str] = None
