# generated by datamodel-codegen:
#   filename:  kmscryptokeyversion_v1alpha1.json
#   timestamp: 2024-03-18T21:08:15+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field


class AttestationItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    certChains: Optional[CertChains] = Field(
        default=None,
        description='The certificate chains needed to validate the attestation.',
    )
    content: Optional[str] = Field(
        default=None,
        description='The attestation data provided by the HSM when the key operation was performed.',
    )
    externalProtectionLevelOptions: Optional[ExternalProtectionLevelOptions] = Field(
        default=None,
        description='ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.',
    )
    format: Optional[str] = Field(
        default=None, description='The format of the attestation data.'
    )


class CertChains(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    caviumCerts: Optional[str] = Field(
        default=None,
        description='Cavium certificate chain corresponding to the attestation.',
    )
    googleCardCerts: Optional[str] = Field(
        default=None,
        description='Google card certificate chain corresponding to the attestation.',
    )
    googlePartitionCerts: Optional[str] = Field(
        default=None,
        description='Google partition certificate chain corresponding to the attestation.',
    )


class Condition(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lastTransitionTime: Optional[str] = Field(
        default=None,
        description='Last time the condition transitioned from one status to another.',
    )
    message: Optional[str] = Field(
        default=None,
        description='Human-readable message indicating details about last transition.',
    )
    reason: Optional[str] = Field(
        default=None,
        description="Unique, one-word, CamelCase reason for the condition's last transition.",
    )
    status: Optional[str] = Field(
        default=None,
        description='Status is the status of the condition. Can be True, False, Unknown.',
    )
    type: Optional[str] = Field(
        default=None, description='Type is the type of the condition.'
    )


class ExternalProtectionLevelOptions(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ekmConnectionKeyPath: Optional[str] = Field(
        default=None,
        description='The path to the external key material on the EKM when using EkmConnection e.g., "v0/my/key". Set this field instead of externalKeyUri when using an EkmConnection.',
    )
    externalKeyUri: Optional[str] = Field(
        default=None,
        description='The URI for an external resource that this CryptoKeyVersion represents.',
    )


class Model(BaseModel):
    apiVersion: Optional[str] = Field(
        default=None,
        description='apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        default=None,
        description='kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[Dict[str, Any]] = None
    spec: Spec
    status: Optional[Status] = None


class Spec(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    cryptoKey: str = Field(
        ...,
        description="Immutable. The name of the cryptoKey associated with the CryptoKeyVersions.\nFormat: ''projects/{{project}}/locations/{{location}}/keyRings/{{keyring}}/cryptoKeys/{{cryptoKey}}''.",
    )
    resourceID: Optional[str] = Field(
        default=None,
        description='Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.',
    )
    state: Optional[str] = Field(
        default=None,
        description='The current state of the CryptoKeyVersion. Possible values: ["PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED"].',
    )


class Status(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    algorithm: Optional[str] = Field(
        default=None,
        description='The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.',
    )
    attestation: Optional[List[AttestationItem]] = Field(
        default=None,
        description='Statement that was generated and signed by the HSM at key creation time. Use this statement to verify attributes of the key as stored on the HSM, independently of Google.\nOnly provided for key versions with protectionLevel HSM.',
    )
    conditions: Optional[List[Condition]] = Field(
        default=None,
        description="Conditions represent the latest available observation of the resource's current state.",
    )
    generateTime: Optional[str] = Field(
        default=None,
        description='The time this CryptoKeyVersion key material was generated.',
    )
    name: Optional[str] = Field(
        default=None, description='The resource name for this CryptoKeyVersion.'
    )
    observedGeneration: Optional[int] = Field(
        default=None,
        description='ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.',
    )
    protectionLevel: Optional[str] = Field(
        default=None,
        description='The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.',
    )
