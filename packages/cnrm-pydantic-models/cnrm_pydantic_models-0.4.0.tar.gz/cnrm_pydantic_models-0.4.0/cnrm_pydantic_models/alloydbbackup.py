# generated by datamodel-codegen:
#   filename:  alloydbbackup_v1beta1.json
#   timestamp: 2024-03-18T21:06:29+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, ConfigDict, Field


class ClusterNameRef(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    external: Optional[str] = Field(
        default=None,
        description='Allowed value: The `name` field of an `AlloyDBCluster` resource.',
    )
    name: str = Field(
        ...,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        default=None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )


class ClusterNameRef1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    external: str = Field(
        ...,
        description='Allowed value: The `name` field of an `AlloyDBCluster` resource.',
    )
    name: Optional[str] = Field(
        default=None,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        default=None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )


class Condition(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lastTransitionTime: Optional[str] = Field(
        default=None,
        description='Last time the condition transitioned from one status to another.',
    )
    message: Optional[str] = Field(
        default=None,
        description='Human-readable message indicating details about last transition.',
    )
    reason: Optional[str] = Field(
        default=None,
        description="Unique, one-word, CamelCase reason for the condition's last transition.",
    )
    status: Optional[str] = Field(
        default=None,
        description='Status is the status of the condition. Can be True, False, Unknown.',
    )
    type: Optional[str] = Field(
        default=None, description='Type is the type of the condition.'
    )


class EncryptionConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    kmsKeyName: Optional[str] = Field(
        default=None,
        description='Immutable. The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].',
    )


class EncryptionInfoItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    encryptionType: Optional[str] = Field(
        default=None, description='Output only. Type of encryption.'
    )
    kmsKeyVersions: Optional[List[str]] = Field(
        default=None,
        description='Output only. Cloud KMS key versions that are being used to protect the database or the backup.',
    )


class Model(BaseModel):
    apiVersion: Optional[str] = Field(
        default=None,
        description='apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        default=None,
        description='kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[Dict[str, Any]] = None
    spec: Spec
    status: Optional[Status] = None


class ProjectRef(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    external: Optional[str] = Field(
        default=None,
        description='Allowed value: The `name` field of a `Project` resource.',
    )
    name: str = Field(
        ...,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        default=None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )


class ProjectRef1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    external: str = Field(
        ..., description='Allowed value: The `name` field of a `Project` resource.'
    )
    name: Optional[str] = Field(
        default=None,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        default=None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )


class Spec(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    clusterNameRef: Union[ClusterNameRef, ClusterNameRef1] = Field(
        ...,
        description='The full resource name of the backup source cluster (e.g., projects/{project}/locations/{location}/clusters/{clusterId}).',
    )
    description: Optional[str] = Field(
        default=None, description='Immutable. User-provided description of the backup.'
    )
    encryptionConfig: Optional[EncryptionConfig] = Field(
        default=None,
        description='EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).',
    )
    location: str = Field(
        ...,
        description='Immutable. The location where the alloydb backup should reside.',
    )
    projectRef: Union[ProjectRef, ProjectRef1] = Field(
        ..., description='The project that this resource belongs to.'
    )
    resourceID: Optional[str] = Field(
        default=None,
        description='Immutable. Optional. The backupId of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.',
    )


class Status(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    conditions: Optional[List[Condition]] = Field(
        default=None,
        description="Conditions represent the latest available observation of the resource's current state.",
    )
    createTime: Optional[str] = Field(
        default=None, description='Time the Backup was created in UTC.'
    )
    encryptionInfo: Optional[List[EncryptionInfoItem]] = Field(
        default=None,
        description='EncryptionInfo describes the encryption information of a cluster or a backup.',
    )
    etag: Optional[str] = Field(default=None, description='A hash of the resource.')
    name: Optional[str] = Field(
        default=None,
        description='Output only. The name of the backup resource with the format: * projects/{project}/locations/{region}/backups/{backupId}.',
    )
    observedGeneration: Optional[int] = Field(
        default=None,
        description='ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.',
    )
    reconciling: Optional[bool] = Field(
        default=None,
        description='If true, indicates that the service is actively updating the resource. This can happen due to user-triggered updates or system actions like failover or maintenance.',
    )
    state: Optional[str] = Field(
        default=None, description='The current state of the backup.'
    )
    uid: Optional[str] = Field(
        default=None,
        description='Output only. The system-generated UID of the resource. The UID is assigned when the resource is created, and it is retained until it is deleted.',
    )
    updateTime: Optional[str] = Field(
        default=None, description='Time the Backup was updated in UTC.'
    )
