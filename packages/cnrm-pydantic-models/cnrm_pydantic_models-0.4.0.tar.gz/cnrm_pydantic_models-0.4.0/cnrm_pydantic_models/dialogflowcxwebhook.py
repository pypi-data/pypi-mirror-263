# generated by datamodel-codegen:
#   filename:  dialogflowcxwebhook_v1alpha1.json
#   timestamp: 2024-03-18T21:07:42+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, ConfigDict, Field


class Condition(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lastTransitionTime: Optional[str] = Field(
        default=None,
        description='Last time the condition transitioned from one status to another.',
    )
    message: Optional[str] = Field(
        default=None,
        description='Human-readable message indicating details about last transition.',
    )
    reason: Optional[str] = Field(
        default=None,
        description="Unique, one-word, CamelCase reason for the condition's last transition.",
    )
    status: Optional[str] = Field(
        default=None,
        description='Status is the status of the condition. Can be True, False, Unknown.',
    )
    type: Optional[str] = Field(
        default=None, description='Type is the type of the condition.'
    )


class GenericWebService(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    allowedCaCerts: Optional[List[str]] = Field(
        default=None,
        description='Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification.',
    )
    requestHeaders: Optional[Dict[str, str]] = Field(
        default=None,
        description='Immutable. The HTTP request headers to send together with webhook requests.',
    )
    uri: str = Field(
        ..., description='Whether to use speech adaptation for speech recognition.'
    )


class Model(BaseModel):
    apiVersion: Optional[str] = Field(
        default=None,
        description='apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        default=None,
        description='kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[Dict[str, Any]] = None
    spec: Spec
    status: Optional[Status] = None


class ServiceDirectory(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    genericWebService: GenericWebService = Field(
        ..., description='The name of Service Directory service.'
    )
    service: str = Field(..., description='The name of Service Directory service.')


class Spec(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    disabled: Optional[bool] = Field(
        default=None, description='Indicates whether the webhook is disabled.'
    )
    displayName: str = Field(
        ...,
        description='The human-readable name of the webhook, unique within the agent.',
    )
    enableSpellCorrection: Optional[bool] = Field(
        default=None,
        description='Indicates if automatic spell correction is enabled in detect intent requests.',
    )
    enableStackdriverLogging: Optional[bool] = Field(
        default=None,
        description='Determines whether this agent should log conversation queries.',
    )
    genericWebService: Optional[GenericWebService] = Field(
        default=None, description='Configuration for a generic web service.'
    )
    parent: Optional[str] = Field(
        default=None,
        description='Immutable. The agent to create a webhook for.\nFormat: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>.',
    )
    resourceID: Optional[str] = Field(
        default=None,
        description='Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.',
    )
    securitySettings: Optional[str] = Field(
        default=None,
        description='Name of the SecuritySettings reference for the agent. Format: projects/<Project ID>/locations/<Location ID>/securitySettings/<Security Settings ID>.',
    )
    serviceDirectory: Optional[ServiceDirectory] = Field(
        default=None, description='Configuration for a Service Directory service.'
    )
    timeout: Optional[str] = Field(
        default=None, description='Webhook execution timeout.'
    )


class Status(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    conditions: Optional[List[Condition]] = Field(
        default=None,
        description="Conditions represent the latest available observation of the resource's current state.",
    )
    name: Optional[str] = Field(
        default=None,
        description='The unique identifier of the webhook.\nFormat: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/webhooks/<Webhook ID>.',
    )
    observedGeneration: Optional[int] = Field(
        default=None,
        description='ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.',
    )
    startFlow: Optional[str] = Field(
        default=None,
        description='Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: projects/<Project ID>/locations/<Location ID>/agents/<Agent ID>/flows/<Flow ID>.',
    )
