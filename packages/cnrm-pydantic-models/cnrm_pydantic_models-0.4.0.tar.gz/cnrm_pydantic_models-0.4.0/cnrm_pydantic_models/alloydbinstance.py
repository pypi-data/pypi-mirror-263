# generated by datamodel-codegen:
#   filename:  alloydbinstance_v1beta1.json
#   timestamp: 2024-03-18T21:06:31+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional, Union

from pydantic import BaseModel, ConfigDict, Field


class ClusterRef(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    external: Optional[str] = Field(
        default=None,
        description='Allowed value: The `name` field of an `AlloyDBCluster` resource.',
    )
    name: str = Field(
        ...,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        default=None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )


class ClusterRef1(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    external: str = Field(
        ...,
        description='Allowed value: The `name` field of an `AlloyDBCluster` resource.',
    )
    name: Optional[str] = Field(
        default=None,
        description='Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names',
    )
    namespace: Optional[str] = Field(
        default=None,
        description='Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/',
    )


class Condition(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lastTransitionTime: Optional[str] = Field(
        default=None,
        description='Last time the condition transitioned from one status to another.',
    )
    message: Optional[str] = Field(
        default=None,
        description='Human-readable message indicating details about last transition.',
    )
    reason: Optional[str] = Field(
        default=None,
        description="Unique, one-word, CamelCase reason for the condition's last transition.",
    )
    status: Optional[str] = Field(
        default=None,
        description='Status is the status of the condition. Can be True, False, Unknown.',
    )
    type: Optional[str] = Field(
        default=None, description='Type is the type of the condition.'
    )


class MachineConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    cpuCount: Optional[int] = Field(
        default=None, description="The number of CPU's in the VM instance."
    )


class Model(BaseModel):
    apiVersion: Optional[str] = Field(
        default=None,
        description='apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources',
    )
    kind: Optional[str] = Field(
        default=None,
        description='kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds',
    )
    metadata: Optional[Dict[str, Any]] = None
    spec: Spec
    status: Optional[Status] = None


class ReadPoolConfig(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    nodeCount: Optional[int] = Field(
        default=None,
        description='Read capacity, i.e. number of nodes in a read pool instance.',
    )


class Spec(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    annotations: Optional[Dict[str, str]] = Field(
        default=None,
        description='Annotations to allow client tools to store small amount of arbitrary data. This is distinct from labels.',
    )
    availabilityType: Optional[str] = Field(
        default=None,
        description='\'Availability type of an Instance. Defaults to REGIONAL for both primary and read instances.\nNote that primary and read instances can have different availability types.\nOnly READ_POOL instance supports ZONAL type. Users can\'t specify the zone for READ_POOL instance.\nZone is automatically chosen from the list of zones in the region specified.\nRead pool of size 1 can only have zonal availability. Read pools with node count of 2 or more\ncan have regional availability (nodes are present in 2 or more zones in a region).\' Possible values: ["AVAILABILITY_TYPE_UNSPECIFIED", "ZONAL", "REGIONAL"].',
    )
    clusterRef: Union[ClusterRef, ClusterRef1]
    databaseFlags: Optional[Dict[str, str]] = Field(
        default=None,
        description='Database flags. Set at instance level. * They are copied from primary instance on read instance creation. * Read instances can set new or override existing flags that are relevant for reads, e.g. for enabling columnar cache on a read instance. Flags set on read instance may or may not be present on primary.',
    )
    displayName: Optional[str] = Field(
        default=None,
        description='User-settable and human-readable display name for the Instance.',
    )
    gceZone: Optional[str] = Field(
        default=None,
        description='The Compute Engine zone that the instance should serve from, per https://cloud.google.com/compute/docs/regions-zones This can ONLY be specified for ZONAL instances. If present for a REGIONAL instance, an error will be thrown. If this is absent for a ZONAL instance, instance is created in a random zone with available capacity.',
    )
    instanceType: str = Field(
        ...,
        description='Immutable. The type of the instance. If the instance type is READ_POOL, provide the associated PRIMARY instance in the \'depends_on\' meta-data attribute. Possible values: ["PRIMARY", "READ_POOL"].',
    )
    machineConfig: Optional[MachineConfig] = Field(
        default=None,
        description='Configurations for the machines that host the underlying database engine.',
    )
    readPoolConfig: Optional[ReadPoolConfig] = Field(
        default=None,
        description='Read pool specific config. If the instance type is READ_POOL, this configuration must be provided.',
    )
    resourceID: Optional[str] = Field(
        default=None,
        description='Immutable. Optional. The instanceId of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.',
    )


class Status(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    conditions: Optional[List[Condition]] = Field(
        default=None,
        description="Conditions represent the latest available observation of the resource's current state.",
    )
    createTime: Optional[str] = Field(
        default=None, description='Time the Instance was created in UTC.'
    )
    ipAddress: Optional[str] = Field(
        default=None,
        description='The IP address for the Instance. This is the connection endpoint for an end-user application.',
    )
    name: Optional[str] = Field(
        default=None, description='The name of the instance resource.'
    )
    observedGeneration: Optional[int] = Field(
        default=None,
        description='ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.',
    )
    reconciling: Optional[bool] = Field(
        default=None,
        description="Set to true if the current state of Instance does not match the user's intended state, and the service is actively updating the resource to reconcile them. This can happen due to user-triggered updates or system actions like failover or maintenance.",
    )
    state: Optional[str] = Field(
        default=None, description='The current state of the alloydb instance.'
    )
    uid: Optional[str] = Field(
        default=None, description='The system-generated UID of the resource.'
    )
    updateTime: Optional[str] = Field(
        default=None, description='Time the Instance was updated in UTC.'
    )
