[tool]
[tool.poetry]
name = "unifi_protect_backup"
version = "0.10.6"
homepage = "https://github.com/ep1cman/unifi-protect-backup"
description = "Python tool to backup unifi event clips in realtime."
authors = ["sebastian.goscik <sebastian@goscik.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Information Technology',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "unifi_protect_backup" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.9.0,<4.0"
click = "8.0.1"
pyunifiprotect = "^4.21.0"
aiorun = "^2023.7.2"
aiosqlite = "^0.17.0"
python-dateutil = "^2.8.2"
apprise = "^1.5.0"
expiring-dict = "^1.1.0"
async-lru = "^2.0.4"
aiolimiter = "^1.1.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black  = "^22.10.0"
isort  = "^5.8.0"
flake8  = "^3.9.2"
flake8-docstrings = "^1.6.0"
virtualenv  = "^20.2.2"
mypy = "^0.900"
types-pytz = "^2021.3.5"
types-cryptography = "^3.3.18"
twine  = "^3.3.0"
bump2version = "^1.0.1"
pre-commit = "^2.12.0"
types-python-dateutil = "^2.8.19.10"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest  = "^6.2.4"
pytest-cov  = "^2.12.0"
tox  = "^3.20.1"
tox-asdf = "^0.1.0"

[tool.poetry.scripts]
unifi-protect-backup = 'unifi_protect_backup.cli:main'

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[tool.mypy]
allow_redefinition=true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
