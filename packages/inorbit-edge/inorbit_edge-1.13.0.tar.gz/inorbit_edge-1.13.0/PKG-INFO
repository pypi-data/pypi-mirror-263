Metadata-Version: 2.1
Name: inorbit_edge
Version: 1.13.0
Summary: InOrbit Python Edge SDK
Home-page: https://github.com/inorbit-ai/edge-sdk-python
Author: InOrbit
Author-email: support@inorbit.ai
Keywords: inorbit_edge
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests==2.31.0
Requires-Dist: paho_mqtt==1.6.1
Requires-Dist: Pillow==10.2.0
Requires-Dist: PySocks==1.7.1
Requires-Dist: protobuf==3.19.3
Requires-Dist: certifi>=2024.2.2
Requires-Dist: deprecated==1.2.13
Provides-Extra: setup
Requires-Dist: pytest-runner>=5.2; extra == "setup"
Provides-Extra: test
Requires-Dist: opencv-python==4.7.0.68; extra == "test"
Requires-Dist: black>=19.10b0; extra == "test"
Requires-Dist: codecov>=2.1.4; extra == "test"
Requires-Dist: flake8>=3.8.3; extra == "test"
Requires-Dist: flake8-debugger>=3.2.1; extra == "test"
Requires-Dist: pytest>=5.4.3; extra == "test"
Requires-Dist: pytest-cov>=2.9.0; extra == "test"
Requires-Dist: pytest-mock>=3.10.0; extra == "test"
Requires-Dist: pytest-raises>=0.11; extra == "test"
Requires-Dist: pyyaml>=6.0; extra == "test"
Requires-Dist: lark>=1.0.0; extra == "test"
Requires-Dist: requests_mock>=1.9.3; extra == "test"
Provides-Extra: dev
Requires-Dist: pytest-runner>=5.2; extra == "dev"
Requires-Dist: opencv-python==4.7.0.68; extra == "dev"
Requires-Dist: black>=19.10b0; extra == "dev"
Requires-Dist: codecov>=2.1.4; extra == "dev"
Requires-Dist: flake8>=3.8.3; extra == "dev"
Requires-Dist: flake8-debugger>=3.2.1; extra == "dev"
Requires-Dist: pytest>=5.4.3; extra == "dev"
Requires-Dist: pytest-cov>=2.9.0; extra == "dev"
Requires-Dist: pytest-mock>=3.10.0; extra == "dev"
Requires-Dist: pytest-raises>=0.11; extra == "dev"
Requires-Dist: pyyaml>=6.0; extra == "dev"
Requires-Dist: lark>=1.0.0; extra == "dev"
Requires-Dist: requests_mock>=1.9.3; extra == "dev"
Requires-Dist: bump2version>=1.0.1; extra == "dev"
Requires-Dist: coverage>=5.1; extra == "dev"
Requires-Dist: ipython>=7.15.0; extra == "dev"
Requires-Dist: m2r2>=0.2.7; extra == "dev"
Requires-Dist: pytest-runner>=5.2; extra == "dev"
Requires-Dist: Sphinx>=3.4.3; extra == "dev"
Requires-Dist: sphinx_rtd_theme>=0.5.1; extra == "dev"
Requires-Dist: tox>=3.15.2; extra == "dev"
Requires-Dist: twine>=3.1.1; extra == "dev"
Requires-Dist: wheel>=0.34.2; extra == "dev"
Provides-Extra: video
Requires-Dist: opencv-python==4.7.0.68; extra == "video"
Provides-Extra: all
Requires-Dist: requests==2.31.0; extra == "all"
Requires-Dist: paho_mqtt==1.6.1; extra == "all"
Requires-Dist: Pillow==10.2.0; extra == "all"
Requires-Dist: PySocks==1.7.1; extra == "all"
Requires-Dist: protobuf==3.19.3; extra == "all"
Requires-Dist: certifi>=2024.2.2; extra == "all"
Requires-Dist: deprecated==1.2.13; extra == "all"
Requires-Dist: pytest-runner>=5.2; extra == "all"
Requires-Dist: opencv-python==4.7.0.68; extra == "all"
Requires-Dist: black>=19.10b0; extra == "all"
Requires-Dist: codecov>=2.1.4; extra == "all"
Requires-Dist: flake8>=3.8.3; extra == "all"
Requires-Dist: flake8-debugger>=3.2.1; extra == "all"
Requires-Dist: pytest>=5.4.3; extra == "all"
Requires-Dist: pytest-cov>=2.9.0; extra == "all"
Requires-Dist: pytest-mock>=3.10.0; extra == "all"
Requires-Dist: pytest-raises>=0.11; extra == "all"
Requires-Dist: pyyaml>=6.0; extra == "all"
Requires-Dist: lark>=1.0.0; extra == "all"
Requires-Dist: requests_mock>=1.9.3; extra == "all"
Requires-Dist: bump2version>=1.0.1; extra == "all"
Requires-Dist: coverage>=5.1; extra == "all"
Requires-Dist: ipython>=7.15.0; extra == "all"
Requires-Dist: m2r2>=0.2.7; extra == "all"
Requires-Dist: pytest-runner>=5.2; extra == "all"
Requires-Dist: Sphinx>=3.4.3; extra == "all"
Requires-Dist: sphinx_rtd_theme>=0.5.1; extra == "all"
Requires-Dist: tox>=3.15.2; extra == "all"
Requires-Dist: twine>=3.1.1; extra == "all"
Requires-Dist: wheel>=0.34.2; extra == "all"

# InOrbit Python Edge SDK

|   OS    |                                                                                                                                           Python 3.8                                                                                                                                            |                                                                                                                                           Python 3.9                                                                                                                                            |                                                                                                                                            Python 3.10                                                                                                                                            |                                                                                                                                            Python 3.11                                                                                                                                            |
|:-------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|
|  Linux  |   [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_LinuxPython38QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_LinuxPython38QualityRunner?branch=%3Cdefault%3E&mode=builds)   |   [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_LinuxPython39QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_LinuxPython39QualityRunner?branch=%3Cdefault%3E&mode=builds)   |   [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_LinuxPython310QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_LinuxPython310QualityRunner?branch=%3Cdefault%3E&mode=builds)   |   [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_LinuxPython311QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_LinuxPython311QualityRunner?branch=%3Cdefault%3E&mode=builds)   |
|   Mac   |     [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_MacPython38QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_MacPython38QualityRunner?branch=%3Cdefault%3E&mode=builds)     |     [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_MacPython39QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_MacPython39QualityRunner?branch=%3Cdefault%3E&mode=builds)     |     [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_MacPython310QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_MacPython310QualityRunner?branch=%3Cdefault%3E&mode=builds)     |     [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_MacPython311QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_MacPython311QualityRunner?branch=%3Cdefault%3E&mode=builds)     |
| Windows | [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_WindowsPython38QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_WindowsPython38QualityRunner?branch=%3Cdefault%3E&mode=builds) | [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_WindowsPython39QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_WindowsPython39QualityRunner?branch=%3Cdefault%3E&mode=builds) | [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_WindowsPython310QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_WindowsPython310QualityRunner?branch=%3Cdefault%3E&mode=builds) | [![TeamCity](https://inorbit.teamcity.com/app/rest/builds/buildType:id:DeveloperPortal_EdgeSdkPython_WindowsPython311QualityRunner/statusIcon.svg)](https://inorbit.teamcity.com/buildConfiguration/DeveloperPortal_EdgeSdkPython_WindowsPython311QualityRunner?branch=%3Cdefault%3E&mode=builds) |

The `InOrbit Edge SDK` allows Python programs to communicate with `InOrbit`
platform on behalf of robots - providing robot data and handling robot actions.
Its goal is to ease the integration between `InOrbit` and any other software
that handles robot data.

---

## Features

- Robot session handling through a `RobotSessionPool`.
- Publish key-values.
- Publish robot poses.
- Publish robot odometry.
- Publish robot path.
- Publish robot laser.
- Execute callbacks on Custom Action execution.
- Execute scripts (or any program) in response to Custom Action execution.

## Quick Start

```python
from inorbit_edge.robot import RobotSessionFactory, RobotSessionPool


def my_command_handler(robot_id, command_name, args, options):
    """Callback for processing custom command calls.

    Args:
        robot_id (str): InOrbit robot ID
        command_name (str): InOrbit command e.g. 'customCommand'
        args (list): Command arguments
        options (dict): object that includes
            - `result_function` can be called to report command execution
            result with the following signature: `result_function(return_code)`
            - `progress_function` can be used to report command output with
            the following signature: `progress_function(output, error)`
            - `metadata` is reserved for the future and will contain additional
            information about the received command request.
    """
    if command_name == "customCommand":
        print(f"Received '{command_name}' for robot '{robot_id}'!. {args}")
        # Return '0' for success
        options["result_function"]("0")


robot_session_factory = RobotSessionFactory(
    api_key="<YOUR_API_KEY>"
)

# Register commands handlers. Note that all handlers are invoked.
robot_session_factory.register_command_callback(my_command_handler)
robot_session_factory.register_commands_path("./user_scripts", r".*\.sh")

robot_session_pool = RobotSessionPool(robot_session_factory)

robot_session = robot_session_pool.get_session(
    robot_id="my_robot_id_123", robot_name="Python SDK Quick Start Robot"
)

robot_session.publish_pose(x=0.0, y=0.0, yaw=0.0)
```

## Installation

**Stable Release:** `pip install inorbit-edge`<br>
**Development Head:
** `pip install git+https://github.com/inorbit-ai/edge-sdk-python.git`

## Documentation

For full package documentation please
visit [InOrbit Developer Portal](https://developer.inorbit.ai/docs?hsLang=en#edge-sdk).

## Development

See [CONTRIBUTING.md](CONTRIBUTING.md) for information related to developing
the code.

## The Three Commands You Need To Know

1. `pip install -e .[dev]`

   This will install your package in editable mode with all the required
   development dependencies (i.e. `tox`).

2. `make build`

   This will run `tox` which will run all your tests in Python 3.8 - 3.11 as
   well as linting your code.

3. `make clean`

   This will clean up various Python and build generated files so that you can
   ensure that you are working in a clean environment.
