{
  "integration/api/action/test_api_action_classification.py": true,
  "integration/api/action/test_api_action_detection.py": true,
  "integration/api/detection/test_api_detection.py": true,
  "integration/api/segmentation/test_api_segmentation.py": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_yolox[True-input_size0]": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_yolox[True-input_size1]": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_yolox[False-input_size0]": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_yolox[False-input_size1]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_train[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_resume[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_resume[Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export[True-Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export[True-Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export[False-Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export[False-Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export_fp16[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export_fp16[Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export_onnx[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_export_onnx[Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_eval[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_eval[Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_eval_openvino[True-Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_eval_openvino[True-Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_eval_openvino[False-Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_eval_openvino[False-Object_Detection_Deformable_DETR]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_explain[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_explain_all_classes[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_explain_process_saliency_maps[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_explain_openvino[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_explain_all_classes_openvino[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_otx_explain_process_saliency_maps_openvino[Object_Detection_YOLOX_L]": true,
  "integration/cli/detection/test_detection.py::TestDetectionCLI::test_nncf_optimize[Object_Detection_YOLOX_L]": true,
  "integration/cli/instance_segmentation/test_instance_segmentation.py::TestInstanceSegmentationCLI::test_otx_train_semisl[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "e2e/cli/detection/test_detection.py::TestToolsOTXDetection::test_otx_eval_deployment[Object_Detection_YOLOX_L]": true,
  "e2e/cli/detection/test_detection.py::TestToolsOTXDetection::test_nncf_eval[Object_Detection_YOLOX_L]": true,
  "e2e/cli/detection/test_detection.py::TestToolsOTXDetection::test_otx_export[True-Object_Detection_YOLOX_L]": true,
  "e2e/cli/detection/test_detection.py::TestToolsOTXDetection::test_otx_export[False-Object_Detection_YOLOX_L]": true,
  "unit/algorithms/classification/adapters/mmcls/test_configurer.py::TestClassificationConfigurer::test_configure_input_size[None]": true,
  "unit/algorithms/classification/adapters/mmcls/test_configurer.py::TestClassificationConfigurer::test_configure_input_size[input_size1]": true,
  "unit/algorithms/classification/adapters/mmcls/test_configurer.py::TestClassificationConfigurer::test_configure_input_size[input_size2]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[none-Default]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[none-Auto]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[none-1024x1024]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[no_input_size-Default]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[no_input_size-Auto]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[no_input_size-1024x1024]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[input_size_default-Default]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[input_size_default-Auto]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[input_size_default-1024x1024]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[input_size_exist-Default]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[input_size_exist-Auto]": true,
  "unit/algorithms/common/adapters/mmcv/utils/test_config_utils.py::TestInputSizeManager::test_get_configured_input_size[input_size_exist-1024x1024]": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_not_yolox[None]": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_not_yolox[input_size1]": true,
  "unit/algorithms/detection/adapters/mmdet/test_configurer.py::TestDetectionConfigurer::test_configure_input_size_not_yolox[input_size2]": true,
  "unit/algorithms/segmentation/adapters/mmseg/test_mmseg_configurer.py::TestSegmentationConfigurer::test_configure_input_size[None]": true,
  "unit/algorithms/segmentation/adapters/mmseg/test_mmseg_configurer.py::TestSegmentationConfigurer::test_configure_input_size[input_size1]": true,
  "unit/algorithms/segmentation/adapters/mmseg/test_mmseg_configurer.py::TestSegmentationConfigurer::test_configure_input_size[input_size2]": true,
  "e2e/cli/classification/test_classification.py::TestToolsMultilabelClassification::test_ptq_validate_fq[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_nncf_optimize_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_ptq_optimize_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_nncf_optimize_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_classification.py::test_timeline[1]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-EfficientNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-EfficientNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-EfficientNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuarcy[large-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[large-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[large-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmenatation.py::TestPerfInstanceSegmentation::test_accuracy[large-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[large-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[large-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmenatation.py::TestPerfTilingInstanceSegmentation::test_accuracy[large-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "e2e/cli/detection/test_api_xai_sanity_detection.py::TestOVDetXAIAPI::test_inference_xai": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_kpi_test[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_kpi_test[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_kpi_test[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_cls_incr[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_cls_incr[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_cls_incr[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_cls_incr_kpi_test[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_cls_incr_kpi_test[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_train_cls_incr_kpi_test[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_export_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_export_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_export_eval_openvino[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_deploy_eval_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_deploy_eval_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_otx_deploy_eval_deployment[Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_nncf_optimize_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_ptq_optimize_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation::test_ptq_optimize_eval[Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_accuracy[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_speed[small-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_speed[small-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_speed[small-Custom_Counting_Instance_Segmentation_MaskRCNN_EfficientNetB2B]": true,
  "perf/test_instance_segmentation.py::TestPerfInstanceSegmentation::test_speed[medium-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmentation.py::TestPerfTilingInstanceSegmentation::test_accuracy[small-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_instance_segmentation.py::TestPerfTilingInstanceSegmentation::test_speed[small-Custom_Counting_Instance_Segmentation_MaskRCNN_ResNet50]": true,
  "perf/test_instance_segmentation.py::TestPerfTilingInstanceSegmentation::test_speed[small-Custom_Counting_Instance_Segmentation_MaskRCNN_SwinT_FP16]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[large-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[large-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[large-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_accuracy[large-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[large-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[large-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[large-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfSingleLabelClassification::test_speed[large-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[large-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[large-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[large-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_accuracy[large-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[large-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[large-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[large-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfMultiLabelClassification::test_speed[large-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_accuracy[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[small-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[small-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[small-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[medium-Custom_Image_Classification_DeiT-Tiny]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_speed[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "fuzzing/cli_fuzzing.py": true,
  "fuzzing/helper.py": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_perf[medium-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_perf[medium-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_perf[medium-Custom_Image_Classification_EfficinetNet-B0]": true,
  "perf/test_classification.py::TestPerfHierarchicalLabelClassification::test_perf[small-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "perf/test_detection.py::TestPerfDetection::test_perf[medium-Custom_Object_Detection_YOLOX]": true,
  "perf/test_anomaly.py": true,
  "perf/test_classification.py": true,
  "perf/test_detection.py": true,
  "perf/test_instance_segmentation.py": true,
  "perf/test_semantic_segmentation.py": true,
  "perf/test_visual_prompting.py": true,
  "regression/test_regression.py": true,
  "unit/algorithms/anomaly/adapters/anomalib/accelerators/__init__.py": true,
  "unit/algorithms/anomaly/adapters/anomalib/plugins/__init__.py": true,
  "unit/algorithms/anomaly/adapters/anomalib/strategies/__init__.py": true,
  "unit/algorithms/classification/adapters/mmcls/api/__init__.py": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_xpu_optimizer_hook.py": true,
  "unit/algorithms/common/adapters/torch/amp/test_xpu_grad_scaler.py": true,
  "unit/algorithms/detection/adapters/mmdet/api/__init__.py": true,
  "unit/algorithms/segmentation/adapters/mmseg/api/__init__.py": true,
  "unit/api/parameters_validation/validation_helper.py": true,
  "unit/cli/conftest.py": true,
  "integration/api/test_auto_configuration.py": true,
  "integration/api/test_engine_api.py": true,
  "integration/api/test_xai.py": true,
  "integration/cli/test_auto_configuration.py": true,
  "integration/cli/test_export_inference.py": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_train[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_train[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_export[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_export[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_eval[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_eval[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_eval_openvino[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_eval_openvino[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_demo[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_demo[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_demo_openvino[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_demo_openvino[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_deploy_openvino[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_deploy_openvino[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_eval_deployment[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_eval_deployment[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_demo_deployment[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_otx_demo_deployment[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_optimize[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_optimize[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_export[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_export[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_validate_fq[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_validate_fq[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_eval[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_eval[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_eval_openvino[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_nncf_eval_openvino[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_ptq_optimize[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_ptq_optimize[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_ptq_validate_fq[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_ptq_validate_fq[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_ptq_eval[ote_anomaly_segmentation_stfpm]": true,
  "e2e/cli/anomaly/test_anomaly_segmentation.py::TestToolsAnomalySegmentation::test_ptq_eval[ote_anomaly_segmentation_padim]": true,
  "e2e/cli/semantic_segmentation/test_segmentation.py::TestToolsOTXSegmentation": true,
  "e2e/cli/semantic_segmentation/test_segmentation.py::TestToolsOTXSemiSLSegmentation": true,
  "e2e/cli/semantic_segmentation/test_segmentation.py::TestToolsOTXSelfSLSegmentation": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_find": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_backbone_build[CLASSIFICATION_torchvision.mobilenet_v3_large]": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_backbone_build[CLASSIFICATION_mmcls.MMOVBackbone]": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_backbone_build[DETECTION_torchvision.mobilenet_v3_large]": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_backbone_build[INSTANCE_SEGMENTATION_torchvision.mobilenet_v3_large]": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_backbone_build[SEGMENTATION_torchvision.mobilenet_v3_large]": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_build_rebuild[classification]": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI::test_otx_build_rebuild[detection]": true,
  "integration/cli/test_cli.py::TestToolsOTXBuildAutoConfig::test_otx_build_with_autosplit[classification]": true,
  "integration/cli/test_cli.py::TestToolsOTXBuildAutoConfig::test_otx_build_with_autosplit[classification_with_task]": true,
  "integration/cli/test_cli.py::TestToolsOTXBuildAutoConfig::test_otx_build_with_autosplit[detection]": true,
  "integration/cli/test_cli.py::TestToolsOTXBuildAutoConfig::test_otx_build_with_autosplit[detection_with_task]": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_train[classification]": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_train[classification_with_template]": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_train[detection]": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_train[detection_with_template]": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_train_wo_output_args": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_export_wo_output_args": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_optimize_wo_output_args": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig::test_otx_train_wo_workspace_and_output_args": true,
  "integration/cli/test_cli.py::TestTelemetryIntegration::test_tm_integration_exit_0": true,
  "integration/cli/test_cli.py::TestTelemetryIntegration::test_tm_integration_exit_exception": true,
  "integration/cli/test_cli.py::TestToolsOTXCLI": true,
  "integration/cli/test_cli.py::TestToolsOTXBuildAutoConfig": true,
  "integration/cli/test_cli.py::TestToolsOTXTrainAutoConfig": true,
  "integration/cli/test_cli.py::TestTelemetryIntegration": true,
  "integration/cli/classification/test_classification.py::TestClassificationModelTemplates::test_model_category": true,
  "integration/cli/classification/test_classification.py::TestClassificationModelTemplates::test_model_status": true,
  "integration/cli/classification/test_classification.py::TestClassificationModelTemplates::test_default_for_task": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_supcon[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_resume[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[True-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[True-Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[True-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[True-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[False-Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[False-Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[False-Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export[False-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_fp16[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_fp16[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_fp16[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_fp16[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_onnx[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_onnx[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_onnx[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_export_onnx[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_openvino[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_openvino[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_openvino[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes_openvino[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes_openvino[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes_openvino[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_all_classes_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps_openvino[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps_openvino[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps_openvino[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_explain_process_saliency_maps_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval_openvino[True-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval_openvino[False-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_deploy_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_eval_deployment[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_hpo[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_nncf_optimize[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_nncf_optimize[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_nncf_optimize[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_nncf_optimize[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_multi_gpu_train[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_semisl[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_multi_gpu_train_semisl[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_selfsl[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_multi_gpu_train_selfsl[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_enable_noisy_lable_detection[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_enable_noisy_lable_detection[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_enable_noisy_lable_detection[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_enable_noisy_lable_detection[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_auto_adapt_batch_size[Safe-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_auto_adapt_batch_size[Full-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultiClassClassificationCLI::test_otx_train_auto_adapt_num_workers[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_train[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_export[True-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_export[False-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_export_fp16[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_eval[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_explain[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_explain_all_classes[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_explain_process_saliency_maps[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_explain_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_explain_all_classes_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_explain_process_saliency_maps_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_eval_openvino[True-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_eval_openvino[False-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_deploy_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_eval_deployment[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_nncf_optimize[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestMultilabelClassificationCLI::test_otx_train_semisl[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_train[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_EfficientNet-V2-S]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_DeiT-Tiny]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_MobileNet-V3-large-1x]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_train_cls_decr[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_export[True-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_export[False-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_export_fp16[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_eval[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_explain[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_explain_all_classes[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_explain_process_saliency_maps[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_explain_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_explain_all_classes_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_explain_process_saliency_maps_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_eval_openvino[True-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_eval_openvino[False-Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_deploy_openvino[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_otx_eval_deployment[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/classification/test_classification.py::TestHierarchicalClassificationCLI::test_nncf_optimize[Custom_Image_Classification_EfficinetNet-B0]": true,
  "integration/cli/instance_segmentation/test_tiling_instseg.py::TestTilingInstanceSegmentationCLI": true,
  "regression/action/test_action_classification.py::TestRegressionActionClassification": true,
  "regression/action/test_action_detection.py::TestRegressionActionDetection": true,
  "regression/anomaly/test_anomaly_classificaiton.py::TestRegressionAnomalyClassification": true,
  "regression/anomaly/test_anomaly_detection.py::TestRegressionAnomalyDetection": true,
  "regression/anomaly/test_anomaly_segmentation.py::TestRegressionAnomalySegmentation": true,
  "regression/classification/test_classification.py::TestRegressionMultiClassClassification": true,
  "regression/classification/test_classification.py::TestRegressionMultiLabelClassification": true,
  "regression/classification/test_classification.py::TestRegressionHierarchicalLabelClassification": true,
  "regression/classification/test_classification.py::TestRegressionSupconClassification": true,
  "regression/detection/test_detection.py::TestRegressionDetection": true,
  "regression/detection/test_tiling_detection.py::TestRegressionTilingDetection": true,
  "regression/instance_segmentation/test_instance_segmentation.py::TestRegressionInstanceSegmentation": true,
  "regression/instance_segmentation/test_tiling_instance_segmentation.py::TestRegressionTilingInstanceSegmentation": true,
  "regression/semantic_segmentation/test_segmentation.py::TestRegressionSegmentation": true,
  "regression/semantic_segmentation/test_segmentation.py::TestRegressionSupconSegmentation": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_adaptive_repeat_data_hook.py::TestAdaptiveRepeatDataHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_adaptive_training_hooks.py::TestAdaptiveTrainSchedulingHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_cancel_interface_hook.py::TestCancelInterfaceHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_checkpoint_hook.py::TestCheckpointHookWithValResults": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_composed_dataloader_hook.py::TestComposedDataLoadersHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_early_stopping_hook.py::TestEarlyStoppingHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_early_stopping_hook.py::TestLazyEarlyStoppingHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_early_stopping_hook.py::TestReduceLROnPlateauLrUpdaterHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_early_stopping_hook.py::TestStopLossNanTrainingHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_ema_v2_hook.py::TestModelEmaV2Hook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_ema_v2_hook.py::TestModelEmaV2": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_eval_hook.py::TestCustomEvalHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_eval_hook.py::test_single_gpu_test": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_eval_hook.py::TestDistCustomEvalHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_fp16_sam_optimizer_hook.py::TestFp16SAMOptimizerHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_hooks.py::TestEMAMomentumUpdateHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_hooks.py::TestTwoCropTransformHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_ib_loss_hook.py::TestIBLossHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_logger_replace_hook.py::TestLoggerReplaceHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_mean_teacher_hook.py::TestUnbiasedTeacherHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_model_ema_hook.py::TestDualModelEMAHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_model_ema_hook.py::TestCustomModelEMAHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_no_bias_decay_hook.py::TestNoBiasDecayHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_recording_forward_hooks.py::TestBaseRecordingForwardHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_recording_forward_hooks.py::TestEigenCamHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_recording_forward_hooks.py::TestActivationMapHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_recording_forward_hooks.py::TestFeatureVectorHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_recording_forward_hooks.py::TestReciproCAMHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_save_initial_weight_hook.py::TestSaveInitialWeightHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_semisl_cls_hook.py::TestSemiSLClsHook": true,
  "unit/algorithms/common/adapters/mmcv/hooks/test_task_adapt_hook.py::TestTaskAdaptHook": true,
  "unit/algorithms/common/adapters/mmcv/tasks/test_exporter.py::TestExporter": true,
  "unit/algorithms/common/adapters/mmcv/tasks/test_version.py::test_version": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_mmdeploy.py::test_is_mmdeploy_enabled": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_mmdeploy.py::test_mmdeploy_init_model_helper": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_onnx.py::test_remove_nodes_by_op_type": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_onnx.py::test_prepare_onnx_for_openvino": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_operations_domain.py::test_add_domain": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_utils.py::test_convert_batchnorm": true,
  "unit/algorithms/common/adapters/mmdeploy/utils/test_deploy_utils_utils.py::test_numpy2list": true,
  "unit/algorithms/common/adapters/torch/dataloaders/samplers/test_balanced_sampler.py::TestBalancedSampler": true,
  "unit/algorithms/common/adapters/torch/dataloaders/samplers/test_cls_incr_sampler.py::TestClsIncrSampler": true,
  "unit/algorithms/common/adapters/torch/dataloaders/samplers/test_otx_sampler.py::TestOTXSampler": true,
  "unit/algorithms/detection/adapters/mmdet/models/assigners/test_custom_max_iou_assigner.py::TestCustomMaxIoUAssigner": true,
  "unit/algorithms/segmentation/adapters/mmseg/models/utils/test_utils.py::TestLossEqualizer": true,
  "unit/api/configuration/elements/test_elements_utils.py::TestUtilsFunctions": true,
  "unit/api/configuration/elements/test_metadata_keys.py::TestMetadataKeys": true,
  "unit/api/configuration/elements/test_primitive_parameters.py::TestPrimitiveParameters": true,
  "unit/api/configuration/enums/test_config_element_type.py::TestElementCategory": true,
  "unit/api/configuration/enums/test_config_element_type.py::TestConfigElementType": true,
  "unit/api/configuration/enums/test_enum_utils.py::TestMetadataKeys": true,
  "unit/api/configuration/enums/test_model_lifecycle.py::TestModelLifecycle": true,
  "unit/api/configuration/helper/test_config_element_mapping.py::TestPrimitiveElementMapping": true,
  "unit/api/configuration/helper/test_config_element_mapping.py::TestGroupElementMapping": true,
  "unit/api/configuration/helper/test_config_element_mapping.py::TestRuleElementMapping": true,
  "unit/api/configuration/helper/test_create.py::TestCreateFunctions": true,
  "unit/api/configuration/helper/test_helper_utils.py::TestUtilsFunctions": true,
  "unit/api/entities/test_annotation.py::TestAnnotation": true,
  "unit/api/entities/test_annotation.py::TestAnnotationSceneKind": true,
  "unit/api/entities/test_annotation.py::TestAnnotationSceneEntity": true,
  "unit/api/entities/test_annotation.py::TestNullAnnotationSceneEntity": true,
  "unit/api/entities/test_color.py::TestColor": true,
  "unit/api/entities/test_color.py::TestColorEntity": true,
  "unit/api/entities/test_coordinate.py::TestCoordinate": true,
  "unit/api/entities/test_dataset_item.py::TestDatasetItemEntity": true,
  "unit/api/entities/test_datasets.py::TestDatasetPurpose": true,
  "unit/api/entities/test_datasets.py::TestDatasetEntity": true,
  "unit/api/entities/test_graph.py::TestGraph": true,
  "unit/api/entities/test_graph.py::TestMultiDiGraph": true,
  "unit/api/entities/test_id.py::TestID": true,
  "unit/api/entities/test_image.py::TestImage": true,
  "unit/api/entities/test_inference_parameters.py::TestInferenceParameters": true,
  "unit/api/entities/test_label.py::TestDomain": true,
  "unit/api/entities/test_label.py::TestLabelEntity": true,
  "unit/api/entities/test_label_schema.py::test_natural_sort_label_id[ID-3]": true,
  "unit/api/entities/test_label_schema.py::test_natural_sort_label_id[ID-fake1name2]": true,
  "unit/api/entities/test_label_schema.py::test_natural_sort_label_id[get_label_entity-3]": true,
  "unit/api/entities/test_label_schema.py::test_natural_sort_label_id[get_label_entity-fake1name2]": true,
  "unit/api/entities/test_label_schema.py::test_natural_sort_label_id[get_scored_label-3]": true,
  "unit/api/entities/test_label_schema.py::test_natural_sort_label_id[get_scored_label-fake1name2]": true,
  "unit/api/entities/test_label_schema.py::TestLabelSchema": true,
  "unit/api/entities/test_label_schema.py::TestLabelGroupType": true,
  "unit/api/entities/test_label_schema.py::TestLabelGroup": true,
  "unit/api/entities/test_label_schema.py::TestLabelTree": true,
  "unit/api/entities/test_label_schema.py::TestLabelSchemaEntity": true,
  "unit/api/entities/test_media.py::TestIMediaEntity": true,
  "unit/api/entities/test_media.py::TestIMedia2DEntity": true,
  "unit/api/entities/test_metadata.py::TestIMetadata": true,
  "unit/api/entities/test_metadata.py::TestFloatType": true,
  "unit/api/entities/test_metadata.py::TestMetadataItemEntity": true,
  "unit/api/entities/test_metadata.py::TestFloatMetadata": true,
  "unit/api/entities/test_metrics.py::TestMetrics": true,
  "unit/api/entities/test_metrics.py::TestCountMetric": true,
  "unit/api/entities/test_metrics.py::TestInfoMetric": true,
  "unit/api/entities/test_metrics.py::TestDateMetric": true,
  "unit/api/entities/test_metrics.py::TestScoreMetric": true,
  "unit/api/entities/test_metrics.py::TestCurveMetric": true,
  "unit/api/entities/test_metrics.py::TestNullMetric": true,
  "unit/api/entities/test_metrics.py::TestVisualizationType": true,
  "unit/api/entities/test_metrics.py::TestColorPalette": true,
  "unit/api/entities/test_metrics.py::TestVisualizationInfo": true,
  "unit/api/entities/test_metrics.py::TestTextChartInfo": true,
  "unit/api/entities/test_metrics.py::TestLineChartInfo": true,
  "unit/api/entities/test_metrics.py::TestBarChartInfo": true,
  "unit/api/entities/test_metrics.py::TestMatrixChartInfo": true,
  "unit/api/entities/test_metrics.py::TestMatrixMetricsGroup": true,
  "unit/api/entities/test_metrics.py::TestLineMetricsGroup": true,
  "unit/api/entities/test_metrics.py::TestBarMetricsGroup": true,
  "unit/api/entities/test_metrics.py::TestTextMetricsGroup": true,
  "unit/api/entities/test_metrics.py::TestPerformance": true,
  "unit/api/entities/test_metrics.py::TestNullPerformance": true,
  "unit/api/entities/test_metrics.py::TestMultiScorePerformance": true,
  "unit/api/entities/test_model.py::TestModelPrecision": true,
  "unit/api/entities/test_model.py::TestModelFormat": true,
  "unit/api/entities/test_model.py::TestModelOptimizationType": true,
  "unit/api/entities/test_model.py::TestOptimizationMethod": true,
  "unit/api/entities/test_model.py::TestModelConfiguration": true,
  "unit/api/entities/test_model.py::TestModelEntity": true,
  "unit/api/entities/test_model_template.py::TestTargetDevice": true,
  "unit/api/entities/test_model_template.py::TestModelOptimizationMethod": true,
  "unit/api/entities/test_model_template.py::TestDatasetRequirements": true,
  "unit/api/entities/test_model_template.py::TestExportableCodePaths": true,
  "unit/api/entities/test_model_template.py::TestTaskFamily": true,
  "unit/api/entities/test_model_template.py::TestTaskType": true,
  "unit/api/entities/test_model_template.py::TestHyperParameterData": true,
  "unit/api/entities/test_model_template.py::TestInstantiationType": true,
  "unit/api/entities/test_model_template.py::TestDependency": true,
  "unit/api/entities/test_model_template.py::TestEntryPoints": true,
  "unit/api/entities/test_model_template.py::TestModelCategory": true,
  "unit/api/entities/test_model_template.py::TestModelStatus": true,
  "unit/api/entities/test_model_template.py::TestModelTemplate": true,
  "unit/api/entities/test_model_template.py::TestNullModelTemplate": true,
  "unit/api/entities/test_model_template.py::TestTaskTypesConstants": true,
  "unit/api/entities/test_model_template.py::TestParseModelTemplate": true,
  "unit/api/entities/test_optimization_parameters.py::TestOptimizationParameters": true,
  "unit/api/entities/test_pickle.py::TestPickle": true,
  "unit/api/entities/test_result_media.py::TestResultMediaEntity": true,
  "unit/api/entities/test_resultset.py::TestResultset": true,
  "unit/api/entities/test_scored_label.py::TestScoredLabel": true,
  "unit/api/entities/test_subset.py::TestSubset": true,
  "unit/api/entities/test_task_environment.py::TestTaskEnvironment": true,
  "unit/api/entities/test_tensor.py::TestTensorEntity": true,
  "unit/api/entities/test_train_parameters.py::TestTrainParameters": true,
  "unit/api/entities/interfaces/test_graph_interface.py::TestIGraph": true,
  "unit/api/entities/shapes/test_ellipse.py::TestEllipse": true,
  "unit/api/entities/shapes/test_polygon.py::TestPoint": true,
  "unit/api/entities/shapes/test_polygon.py::TestPolygon": true,
  "unit/api/entities/shapes/test_rectangle.py::TestRectangle": true,
  "unit/api/entities/shapes/test_shape.py::TestShapeType": true,
  "unit/api/entities/shapes/test_shape.py::TestShapeEntity": true,
  "unit/api/entities/shapes/test_shape.py::TestShape": true,
  "unit/api/serialization/test_datetime_mapper.py::TestDatetimeMapper": true,
  "unit/api/serialization/test_id_mapper.py::TestIDMapper": true,
  "unit/api/serialization/test_label_mapper.py::TestColorMapper": true,
  "unit/api/serialization/test_label_mapper.py::TestLabelEntityMapper": true,
  "unit/api/serialization/test_label_mapper.py::TestLabelSchemaEntityMapper": true,
  "unit/api/serialization/test_label_mapper.py::TestLabelGroupMapper": true,
  "unit/api/serialization/test_label_mapper.py::TestLabelTreeMapper": true,
  "unit/api/usecases/adapters/test_model_adapter.py::TestIDataSource": true,
  "unit/api/usecases/adapters/test_model_adapter.py::TestModelAdapter": true,
  "unit/api/usecases/adapters/test_model_adapter.py::TestExportableCodeAdapter": true,
  "unit/api/usecases/evaluation/test_accuracy.py::TestAccuracyFunctions": true,
  "unit/api/usecases/evaluation/test_accuracy.py::TestAccuracy": true,
  "unit/api/usecases/evaluation/test_basic_operations.py::TestBasicOperationsFunctions": true,
  "unit/api/usecases/evaluation/test_dice.py::TestDice": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestFMeasureFunctions": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestMetrics": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestResultCounters": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestAggregatedResults": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestOverallResults": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestFMeasureCalculator": true,
  "unit/api/usecases/evaluation/test_f_measure.py::TestFMeasure": true,
  "unit/api/usecases/exportable_code/test_prediction_to_annotation_converter.py::TestDetectionToAnnotationConverter": true,
  "unit/api/usecases/exportable_code/test_prediction_to_annotation_converter.py::TestIPredictionToAnnotation": true,
  "unit/api/usecases/exportable_code/test_prediction_to_annotation_converter.py::TestCreateConverter": true,
  "unit/api/usecases/exportable_code/test_prediction_to_annotation_converter.py::TestDetectionBoxToAnnotation": true,
  "unit/api/usecases/exportable_code/test_prediction_to_annotation_converter.py::TestSegmentationToAnnotation": true,
  "unit/api/usecases/exportable_code/test_streamer.py::TestStreamer": true,
  "unit/api/usecases/exportable_code/test_visualization.py::TestVisualizer": true,
  "unit/api/usecases/reporting/test_callback.py::TestCallback": true,
  "unit/api/usecases/reporting/test_time_monitor_callback.py::TestTimeMonitorCallback": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestIEvaluationTask": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestIInferenceTask": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestIRawInference": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestOptimizationType": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestIOptimizationTask": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestITrainingTask": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestIUnload": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestExportType": true,
  "unit/api/usecases/tasks/interfaces/test_interfaces.py::TestIExportTask": true,
  "unit/api/utils/test_segmentation_utils.py::TestSegmentationUtils": true,
  "unit/api/utils/test_shape_drawer.py::TestDrawerEntity": true,
  "unit/api/utils/test_shape_drawer.py::TestHelpers": true,
  "unit/api/utils/test_shape_drawer.py::TestShapeDrawer": true,
  "unit/api/utils/test_shape_drawer.py::TestTopLeftDrawer": true,
  "unit/api/utils/test_shape_drawer.py::TestRectangleDrawer": true,
  "unit/api/utils/test_shape_drawer.py::TestEllipseDrawer": true,
  "unit/api/utils/test_shape_drawer.py::TestPolygonDrawer": true,
  "unit/api/utils/test_shape_factory.py::TestShapeFactory": true,
  "unit/cli/builder/test_cli_builder.py::TestOTXCLIBuilder": true,
  "unit/cli/builder/test_cli_builder.py::TestOTXBuilderUtils": true,
  "unit/cli/manager/test_config_manager.py::test_set_workspace": true,
  "unit/cli/manager/test_config_manager.py::TestConfigManager": true,
  "unit/cli/manager/test_config_manager.py::TestConfigManagerEncryptionKey": true,
  "unit/cli/registry/test_cli_registry.py::TestRegistry": true,
  "unit/cli/registry/test_cli_registry.py::test_find_and_parse_model_template": true,
  "unit/cli/registry/test_cli_registry.py::test_find_and_parse_model_template_exists_true": true,
  "unit/cli/tools/test_build.py::test_get_args": true,
  "unit/cli/tools/test_build.py::test_main": true,
  "unit/cli/tools/test_cli.py::TestCli": true,
  "unit/cli/tools/test_deploy.py::test_get_args": true,
  "unit/cli/tools/test_deploy.py::test_main": true,
  "unit/cli/tools/test_deploy.py::test_main_wrong_workspace": true,
  "unit/cli/tools/test_deploy.py::test_main_wrong_laod_weight[fake.jpg]": true,
  "unit/cli/tools/test_deploy.py::test_main_wrong_laod_weight[fake.png]": true,
  "unit/cli/tools/test_eval.py::test_get_args": true,
  "unit/cli/tools/test_eval.py::test_main": true,
  "unit/cli/tools/test_export.py::test_get_args": true,
  "unit/cli/tools/test_export.py::test_main": true,
  "unit/cli/tools/test_find.py::test_generate_backbone_rows": true,
  "unit/cli/tools/test_find.py::test_main": true,
  "unit/cli/tools/test_find.py::test_main_with_template": true,
  "unit/cli/tools/test_find.py::test_main_with_task": true,
  "unit/cli/tools/test_find.py::test_main_with_backbone": true,
  "unit/cli/tools/test_optimize.py::test_get_args": true,
  "unit/cli/tools/test_optimize.py::test_main": true,
  "unit/cli/tools/test_train.py::test_get_args": true,
  "unit/cli/tools/test_train.py::test_main": true,
  "unit/cli/utils/test_config.py::test_override_mock_parameters": true,
  "unit/cli/utils/test_config.py::test_override_mock_parameters_not_allowed_key": true,
  "unit/cli/utils/test_config.py::test_override_mock_parameters_non_exist_key": true,
  "unit/cli/utils/test_config.py::test_configure_dataset": true,
  "unit/cli/utils/test_config.py::test_configure_dataset_with_data_args": true,
  "unit/cli/utils/test_experiment.py::TestResourceTracker": true,
  "unit/cli/utils/test_experiment.py::test_check_resource[resource_types0]": true,
  "unit/cli/utils/test_experiment.py::test_check_resource[resource_types1]": true,
  "unit/cli/utils/test_experiment.py::test_check_resource[resource_types2]": true,
  "unit/cli/utils/test_experiment.py::test_check_resource_wrong_resource_type": true,
  "unit/cli/utils/test_experiment.py::TestCpuUsageRecorder": true,
  "unit/cli/utils/test_experiment.py::TestGpuUsageRecorder": true,
  "unit/cli/utils/test_hpo.py::TestTaskManager": true,
  "unit/cli/utils/test_hpo.py::TestTaskEnvironmentManager": true,
  "unit/cli/utils/test_hpo.py::TestHpoRunner": true,
  "unit/cli/utils/test_hpo.py::TestTrainer": true,
  "unit/cli/utils/test_hpo.py::TestHpoCallback": true,
  "unit/cli/utils/test_hpo.py::TestHpoDataset": true,
  "unit/cli/utils/test_hpo.py::test_run_hpo": true,
  "unit/cli/utils/test_hpo.py::test_run_hpo_not_supported_task": true,
  "unit/cli/utils/test_hpo.py::test_run_hpo_with_torchrun": true,
  "unit/cli/utils/test_hpo.py::test_get_best_hpo_weight": true,
  "unit/cli/utils/test_hpo.py::test_get_best_hpo_weight_not_exist": true,
  "unit/cli/utils/test_hpo.py::test_run_trial": true,
  "unit/cli/utils/test_importing.py::test_get_impl_class": true,
  "unit/cli/utils/test_importing.py::test_get_backbone_list[otx]": true,
  "unit/cli/utils/test_importing.py::test_get_backbone_list[pytorchcv]": true,
  "unit/cli/utils/test_importing.py::test_get_backbone_list_for_unsupported_backend": true,
  "unit/cli/utils/test_importing.py::test_get_backbone_registry": true,
  "unit/cli/utils/test_importing.py::test_get_backbone_registry_for_unsupported_backend": true,
  "unit/cli/utils/test_importing.py::test_get_otx_root_path": true,
  "unit/cli/utils/test_io.py::test_save_model_data": true,
  "unit/cli/utils/test_io.py::test_read_binary": true,
  "unit/cli/utils/test_io.py::test_read_xml_bin_model": true,
  "unit/cli/utils/test_io.py::test_read_pth_model": true,
  "unit/cli/utils/test_io.py::test_read_zip_model": true,
  "unit/cli/utils/test_io.py::test_read_unknown_model": true,
  "unit/cli/utils/test_io.py::test_read_label_schema_with_model_file[.xml]": true,
  "unit/cli/utils/test_io.py::test_read_label_schema_with_model_file[.bin]": true,
  "unit/cli/utils/test_io.py::test_read_label_schema_with_model_file[.pth]": true,
  "unit/cli/utils/test_io.py::test_read_label_schema_with_model_zipfile": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.jpg]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.JPG]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.jpeg]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.JPEG]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.gif]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.GIF]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.bmp]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.BMP]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.tif]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.TIF]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.tiff]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.TIFF]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.png]": true,
  "unit/cli/utils/test_io.py::test_get_single_image_files[.PNG]": true,
  "unit/cli/utils/test_io.py::test_get_image_files_in_dir": true,
  "unit/cli/utils/test_io.py::test_get_image_files_empty_dir": true,
  "unit/cli/utils/test_io.py::test_save_saliency_output[w_post_processing]": true,
  "unit/cli/utils/test_io.py::test_save_saliency_output[wo_post_processing]": true,
  "unit/cli/utils/test_io.py::test_get_explain_dataset_from_filelist": true,
  "unit/cli/utils/test_multi_gpu.py::test_get_free_port": true,
  "unit/cli/utils/test_multi_gpu.py::test_get_gpu_ids": true,
  "unit/cli/utils/test_multi_gpu.py::test_get_gpu_ids_with_wrong_args": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_key_exist": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_keys_exist": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_key_exist_none_val": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_key": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_key_none_val": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_key_after_param": true,
  "unit/cli/utils/test_multi_gpu.py::test_set_arguments_to_argv_key_after_param_non_val": true,
  "unit/cli/utils/test_multi_gpu.py::test_is_multigpu_child_process": true,
  "unit/cli/utils/test_multi_gpu.py::test_is_multigpu_child_process_no_initialized": true,
  "unit/cli/utils/test_multi_gpu.py::test_is_multigpu_child_process_rank0": true,
  "unit/cli/utils/test_multi_gpu.py::TestMultiGPUManager": true,
  "unit/cli/utils/test_nncf.py::test_is_checkpoint_nncf_meta_exist": true,
  "unit/cli/utils/test_nncf.py::test_is_checkpoint_nncf_metainfo_exist": true,
  "unit/cli/utils/test_nncf.py::test_is_not_checkpoint_nncf_meta_not_exist": true,
  "unit/cli/utils/test_nncf.py::test_get_number_of_fakequantizers_in_xml[0]": true,
  "unit/cli/utils/test_nncf.py::test_get_number_of_fakequantizers_in_xml[10]": true,
  "unit/cli/utils/test_nncf.py::test_get_number_of_fakequantizers_in_xml[100]": true,
  "unit/cli/utils/test_parser.py::test_gen_param_help": true,
  "unit/cli/utils/test_parser.py::test_gen_params_dict_from_args": true,
  "unit/cli/utils/test_parser.py::test_gen_params_dict_from_args_with_type_hint": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_input[True]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_input[False]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_string_true[true]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_string_true[1]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_string_false[false]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_string_false[0]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_wrong_input[1]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_wrong_input[1.2]": true,
  "unit/cli/utils/test_parser.py::test_str2bool_with_bool_wrong_input[abc]": true,
  "unit/cli/utils/test_parser.py::test_add_hyper_parameters_sub_parser": true,
  "unit/cli/utils/test_parser.py::test_get_parser_and_hprams_data_with_fake_template": true,
  "unit/cli/utils/test_parser.py::test_get_parser_and_hprams_data": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[1561-1561]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121k-123904]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121kb-121000]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121kib-123904]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121m-126877696]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121mb-121000000]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121mib-126877696]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121g-129922760704]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121gb-121000000000]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121gib-129922760704]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121as-None]": true,
  "unit/cli/utils/test_parser.py::test_mem_size_parsing[121dddd-None]": true,
  "unit/cli/utils/test_report.py::test_sub_title_to_str": true,
  "unit/cli/utils/test_report.py::test_env_info_to_str": true,
  "unit/cli/utils/test_report.py::test_template_info_to_str": true,
  "unit/cli/utils/test_report.py::test_data_config_to_str": true,
  "unit/cli/utils/test_report.py::test_task_config_to_str": true,
  "unit/cli/utils/test_report.py::test_get_otx_report": true,
  "unit/cli/utils/test_telemetry.py::TestTelemetry": true,
  "unit/core/test_core_patcher.py": true,
  "unit/core/data/test_caching.py": true,
  "unit/core/data/test_helpers.py": true,
  "unit/core/data/test_storage_caching.py": true
}