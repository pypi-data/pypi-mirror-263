import typing
import bpy_types

GenericType = typing.TypeVar("GenericType")

class ASSET_OT_open_containing_blend_file(bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_options: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def cancel(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def modal(self, context, event):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        :param event:
        :type event:
        """
        ...

    def open_in_new_blender(self, filepath):
        """

        :param self:
        :type self:
        :param filepath:
        :type filepath:
        """
        ...

    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class AssetBrowserMetadataOperator:
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

class ASSET_OT_tag_add(AssetBrowserMetadataOperator, bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_options: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...

class ASSET_OT_tag_remove(AssetBrowserMetadataOperator, bpy_types.Operator):
    bl_idname: typing.Any
    bl_label: typing.Any
    bl_options: typing.Any
    bl_rna: typing.Any
    id_data: typing.Any

    def as_keywords(self, ignore):
        """

        :param self:
        :type self:
        :param ignore:
        :type ignore:
        """
        ...

    def as_pointer(self): ...
    def bl_rna_get_subclass(self): ...
    def bl_rna_get_subclass_py(self): ...
    def driver_add(self): ...
    def driver_remove(self): ...
    def execute(self, context):
        """

        :param self:
        :type self:
        :param context:
        :type context:
        """
        ...

    def get(self): ...
    def id_properties_clear(self): ...
    def id_properties_ensure(self): ...
    def id_properties_ui(self): ...
    def is_property_hidden(self): ...
    def is_property_overridable_library(self): ...
    def is_property_readonly(self): ...
    def is_property_set(self): ...
    def items(self): ...
    def keyframe_delete(self): ...
    def keyframe_insert(self): ...
    def keys(self): ...
    def path_from_id(self): ...
    def path_resolve(self): ...
    def poll(self, context):
        """

        :param context:
        :type context:
        """
        ...

    def poll_message_set(self): ...
    def pop(self): ...
    def property_overridable_library_set(self): ...
    def property_unset(self): ...
    def type_recast(self): ...
    def values(self): ...
