Metadata-Version: 2.1
Name: Discord-Extension-Interaction
Version: 0.6.2
Summary: Framework for Application Commands built on discord.py
Home-page: https://github.com/gunyu1019/discord-extension-interaction
Author: gunyu1019
Author-email: gunyu1019@yhs.kr
License: MIT
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: Korean
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Internet
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp>=3.9.3
Requires-Dist: aiosignal>=1.3.1
Requires-Dist: async-timeout>=4.0.3
Requires-Dist: asyncio>=3.4.3
Requires-Dist: attrs>=23.2.0
Requires-Dist: frozenlist>=1.4.1
Requires-Dist: idna>=3.6
Requires-Dist: multidict>=6.0.5
Requires-Dist: yarl>=1.9.4
Provides-Extra: discordpy
Requires-Dist: discord.py; extra == "discordpy"
Provides-Extra: pycord
Requires-Dist: py-cord; extra == "pycord"
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Provides-Extra: lint
Requires-Dist: pycodestyle; extra == "lint"
Requires-Dist: black; extra == "lint"

<h1 align="center">Discord Extension Interaction</h1>
<p align="center">
    <img src="https://img.shields.io/pypi/v/discord-extension-interaction?style=flat" alt="Release" >
    <img src="https://img.shields.io/pypi/dm/discord-extension-interaction?style=flat" alt="Release" >
    <img src="https://img.shields.io/pypi/l/discord-extension-interaction?style=flat" alt="Release" >
</p>

# Introduce
Slash Command is supported through [discord.py](https://github.com/Rapptz/discord.py). <br/>
Based on discord.ext.commands, compatible with existing frames.


#### Compatibility list
<table>
    <thead>
        <tr>
            <th>Moudle Name</th>
            <th>Version</th>
            <th>Tested</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><a href="https://github.com/Rapptz/discord.py">discord.py</a></td>
            <td>v2.3.0</td>
            <td>✔️</td>
        </tr>
        <tr>
            <td><a href="https://github.com/Pycord-Development/pycord">Pycord</a></td>
            <td>v2.4.1</td>
            <td>❌</td>
        </tr>
    </tbody>
</table>

* Plans to support py-cord, but `discord-extension-interaction` is not supported now.

# Installing
**Python 3.9 or higher is required.**<br/>

To install the library without full voice support, you can just run the following command:
```commandline
# Linux/macOS
python3 -m pip install -U discord-extension-interaction

# Windows
py -3 -m pip install -U discord-extension-interaction
```

To install the library with discord.py
```commandline
# Linux/macOS
python3 -m pip install -U discord-extension-interaction[discordpy]

# Windows
py -3 -m pip install -U discord-extension-interaction[discordpy]
```

To install the development version, do the following:
```bash
$ git clone https://github.com/gunyu1019/discord-extension-interaction
$ cd discord-extension-interaction
$ python3 -m pip install -U .
```

# Quick Example
```python
from discord.ext import interaction
from discord import Intents

intents = Intents.default()
bot = interaction.Client(global_sync_command=True, intents = intents)


@interaction.command(description="This is ping")
async def ping(ctx: interaction.ApplicationContext):
    await ctx.send("pong!")
    return

bot.add_interaction(ping)
bot.run("TOKEN")
```

You can find more examples in the [examples](https://github.com/gunyu1019/discord-extension-interaction/tree/main/examples) directory.
