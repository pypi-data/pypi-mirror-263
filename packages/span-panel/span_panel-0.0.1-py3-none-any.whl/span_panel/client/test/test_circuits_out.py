"""
    Span

    Span Panel REST API

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""

from __future__ import annotations

import unittest

from span_panel.client.models.circuits_out import CircuitsOut


class TestCircuitsOut(unittest.TestCase):
    """CircuitsOut unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CircuitsOut:
        """Test CircuitsOut
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `CircuitsOut`
        """
        model = CircuitsOut()  # noqa: E501
        if include_optional:
            return CircuitsOut(
                circuits = {
                    'key' : span_panel.client.models.circuit.Circuit(
                        id = '', 
                        name = '', 
                        relay_state = 'UNKNOWN', 
                        instant_power_w = 1.337, 
                        instant_power_update_time_s = 56, 
                        produced_energy_wh = 1.337, 
                        consumed_energy_wh = 1.337, 
                        energy_accum_update_time_s = 56, 
                        tabs = [
                            56
                            ], 
                        priority = 'UNKNOWN', 
                        is_user_controllable = True, 
                        is_sheddable = True, 
                        is_never_backup = True, )
                    }
            )
        else:
            return CircuitsOut(
                circuits = {
                    'key' : span_panel.client.models.circuit.Circuit(
                        id = '', 
                        name = '', 
                        relay_state = 'UNKNOWN', 
                        instant_power_w = 1.337, 
                        instant_power_update_time_s = 56, 
                        produced_energy_wh = 1.337, 
                        consumed_energy_wh = 1.337, 
                        energy_accum_update_time_s = 56, 
                        tabs = [
                            56
                            ], 
                        priority = 'UNKNOWN', 
                        is_user_controllable = True, 
                        is_sheddable = True, 
                        is_never_backup = True, )
                    },
        )
        """

    def testCircuitsOut(self):
        """Test CircuitsOut"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
