Metadata-Version: 2.1
Name: cjunct
Version: 1.4.1
Summary: Declarative parallel process runner
Home-page: https://github.com/reartnew/cjunct
License: MIT
Author: Artem Novikov
Author-email: artnew@list.ru
Requires-Python: >=3.8,<3.13
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Typing :: Typed
Provides-Extra: docker
Requires-Dist: aiodocker (>=0.21.0,<0.22.0) ; extra == "docker"
Requires-Dist: async-shell (>=1.0.5,<2.0.0)
Requires-Dist: classlogging (>=1.1.1,<2.0.0)
Requires-Dist: click (>=8.1.7,<9.0.0)
Requires-Dist: dacite (>=1.8.1,<2.0.0)
Requires-Dist: named-env (>=2.3.2,<3.0.0)
Requires-Dist: python-dotenv (>=1.0.1,<2.0.0)
Requires-Dist: pyyaml (>=6.0.1,<7.0.0)
Project-URL: Repository, https://github.com/reartnew/cjunct
Description-Content-Type: text/markdown

# cjunct

Declarative parallel process runner.

[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/cjunct)](https://pypi.python.org/pypi/cjunct/)
[![License](https://img.shields.io/pypi/l/cjunct.svg)](https://pypi.python.org/pypi/cjunct/)
[![PyPI version](https://badge.fury.io/py/cjunct.svg)](https://badge.fury.io/py/cjunct)
![Tests](https://github.com/reartnew/cjunct/workflows/main/badge.svg)
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)

## Installation

```shell
pip install cjunct
```

## Usage example

```shell
cjunct run
```

## Development environment setup

Requires system-wide poetry>=1.3.2, see [official documentation](https://python-poetry.org).

```shell
poetry env use python3.8
poetry install --no-root --sync --all-extras
```

The root directory for the source code is `src`,
thus one may add it to the project's python path
for better IDE integration.

#### Running tests with coverage on current environment

```shell
poetry run pytest --cov --cov-report=html:.coverage_report
```

#### Running tests on all available environments

```shell
poetry run tox
```

